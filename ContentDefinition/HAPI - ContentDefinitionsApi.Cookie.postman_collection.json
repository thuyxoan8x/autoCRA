{
	"info": {
		"_postman_id": "a0516941-0b6d-4623-9eaf-cbf38963e2a6",
		"name": "HAPI - ContentDefinitionsApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "HAPI-710 Property Group",
			"item": [
				{
					"name": "Create Property Group",
					"item": [
						{
							"name": "5. Create new property group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(201);\r",
											"\r",
											"requestBody = JSON.parse(request.data);\r",
											"responseBody = pm.response.json();\r",
											"Assert.IsEqual(\"Verify response\", requestBody, responseBody);\r",
											"\r",
											"pm.environment.set(\"propertyGroupName\", responseBody.name);\r",
											"pm.environment.set(\"requestData\", requestBody);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"NewPropertyGroup{{$randomInt}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 0,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the new Property Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"Assert.IsEqual(\"Verify new created property group\", pm.environment.get(\"requestData\"), pm.response.json());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cleanup: Delete the new Property Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(204);\r",
											"\r",
											"pm.environment.unset(\"propertyGroupName\");\r",
											"pm.environment.unset(\"requestData\");\r",
											"pm.environment.unset(\"body\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "6.1. Invalid - Create propertyGroup with name.length>100",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The field Name must be a string or array type with a maximum length of '100'.\", pm.response.json().Error.Details[0].InnerError[0]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"invalidName\", getRandomString(101));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"{{invalidName}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 1,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid - create property group with name contains special character",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsTrue(\"Verify inner error message\", pm.response.json().Error.Details[0].InnerError[0].startsWith(\"The field Name must match the regular expression\"));\r",
											"\r",
											"pm.environment.unset(\"invalidName\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"invalidName\", \"a\" + getRandomStringIncludeSpecialCharacter(30));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"{{invalidName}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 1,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid - create property group with name is null",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The Name field is required.\", pm.response.json().Error.Details[0].InnerError[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": null,\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 1,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid - create property group with name contains only spaces",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The field Name must match the regular expression '[a-zA-Z0-9][\\\\w]*'.\", pm.response.json().Error.Details[0].InnerError[0]);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The Name field is required.\", pm.response.json().Error.Details[0].InnerError[1]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"   \",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 1,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "7. Invalid - create propertyGroup with displayName.length>100",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The field DisplayName must be a string or array type with a maximum length of '100'.\", pm.response.json().Error.Details[0].InnerError[0]);\r",
											"\r",
											"pm.environment.unset(\"invalidDisplayName\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"invalidDisplayName\", getRandomString(101));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"NewPropertyGroup{{$randomInt}}\",\r\n\t\"displayName\": \"{{invalidDisplayName}}\",\r\n\t\"sortOrder\": 1,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "8. Invalid - create propertyGroup with sortIndex=10001",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The field SortOrder must be between 0 and 10000.\", pm.response.json().Error.Details[0].InnerError[0]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"NewPropertyGroup{{$randomInt}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 10001,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid - create propertyGroup with sortIndex=-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The field SortOrder must be between 0 and 10000.\", pm.response.json().Error.Details[0].InnerError[0]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"NewPropertyGroup{{$randomInt}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": -1,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid - create propertyGroup with sortIndex is a string",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsTrue(\"Verify inner error message\", pm.response.json().Error.Details[0].InnerError[0].startsWith(\"Could not convert string to integer:\"));\r",
											"Assert.IsEqual(\"Verify detail target\", \"propertyGroup.sortOrder\", pm.response.json().Error.Details[0].Target);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"NewPropertyGroup{{$randomInt}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": \"abc\",\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "9. Invalid - create propertyGroup without name in body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The Name field is required.\", pm.response.json().Error.Details[0].InnerError[0]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 1,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "10. Create property group with displayName, sortIndex is null",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(201);\r",
											"\r",
											"requestBody = JSON.parse(request.data);\r",
											"requestBody.sortOrder = 0;\r",
											"delete requestBody.displayName;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"Assert.IsEqual(\"Verify response\", responseBody, requestBody);\r",
											"\r",
											"pm.environment.set(\"propertyGroupName\", responseBody.name);\r",
											"pm.environment.set(\"requestData\", requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"NewPropertyGroup{{$randomInt}}\",\r\n\t\"displayName\": null,\r\n\t\"sortOrder\": null,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the new Property Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"Assert.IsEqual(\"Verify new created property group\", pm.environment.get(\"requestData\"), pm.response.json());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cleanup: Delete the new Property Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(204);\r",
											"\r",
											"pm.environment.unset(\"propertyGroupName\");\r",
											"pm.environment.unset(\"requestData\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "11. Invalid - create property group with systemGroup=true",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify message\", \"Cannot create the system group\", pm.response.json().Error.Message);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"NewPropertyGroup{{$randomInt}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 1,\r\n\t\"systemGroup\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "12. Prepare for create property group with existed name - create property group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(201);\r",
											"\r",
											"requestBody = JSON.parse(request.data);\r",
											"pm.environment.set(\"propertyGroupName\", requestBody.name);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"NewPropertyGroup{{$randomInt}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 1,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid - Create property group with existed name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(409);\r",
											"Assert.IsEqual(\"Verify message\", \"There is already another property group with the provided name.\", pm.response.json().Error.Message);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"{{propertyGroupName}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 1,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Cleanup: Delete the new Property Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(204);\r",
											"\r",
											"pm.environment.unset(\"propertyGroupName\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Update Property Group",
					"item": [
						{
							"name": "14. Preparation for update property group - create property group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(201);\r",
											"\r",
											"requestBody = JSON.parse(request.data);\r",
											"\r",
											"pm.environment.set(\"propertyGroupName\", pm.response.json().name);\r",
											"pm.environment.set(\"requestData\", requestBody);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"NewPropertyGroup{{$randomInt}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 1,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update property group: update displayName, sortIndex",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(200);\r",
											"requestBody = JSON.parse(request.data);\r",
											"responseBody = pm.response.json();\r",
											"Assert.IsEqual(\"Verify response\", responseBody, requestBody);\r",
											"\r",
											"pm.environment.set(\"requestData\", requestBody);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"{{propertyGroupName}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": {{$randomInt}},\r\n    \"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get and verify updated property group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(200);\r",
											"Assert.IsEqual(\"Verify response\", pm.environment.get(\"requestData\"), pm.response.json());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "15. Invalid - update property group with name.length>100",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The field Name must be a string or array type with a maximum length of '100'.\", pm.response.json().Error.Details[0].InnerError[0]);\r",
											"\r",
											"pm.environment.unset(\"invalidName\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"invalidName\", getRandomString(101));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"{{invalidName}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 1,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "16. Invalid - update property group with displayName.length>100",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The field DisplayName must be a string or array type with a maximum length of '100'.\", pm.response.json().Error.Details[0].InnerError[0]);\r",
											"\r",
											"pm.environment.unset(\"invalidDisplayName\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"invalidDisplayName\", getRandomString(101));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"{{propertyGroupName}}\",\r\n\t\"displayName\": \"{{invalidDisplayName}}\",\r\n\t\"sortOrder\": {{$randomInt}},\r\n    \"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "17. Invalid - Update property group with sortIndex=-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The field SortOrder must be between 0 and 10000.\", pm.response.json().Error.Details[0].InnerError[0]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"{{propertyGroupName}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": -1,\r\n    \"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid - Update property group with sortIndex is a string",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsTrue(\"Verify inner error message\", pm.response.json().Error.Details[0].InnerError[0].startsWith(\"Could not convert string to integer\"));\r",
											"Assert.IsEqual(\"Verify detail target\", \"propertyGroup.sortOrder\", pm.response.json().Error.Details[0].Target);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"{{propertyGroupName}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": \"abc\",\r\n    \"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid - Update property group with sortIndex=10001",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The field SortOrder must be between 0 and 10000.\", pm.response.json().Error.Details[0].InnerError[0]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"{{propertyGroupName}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": \"10001\",\r\n    \"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "18. Invalid - Update property group without name at url request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(405);\r",
											"Assert.IsEqual(\"Verify message\", \"The requested resource does not support http method 'PUT'.\", pm.response.json().Message);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"NewPropertyGroup{{$randomInt}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 1,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "19. Invalid - Update property group with systemGroup=true",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(409);\r",
											"Assert.IsEqual(\"Verify message\", \"The system group property is read-only and cannot be modified.\", pm.response.json().Error.Message);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"{{propertyGroupName}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": {{$randomInt}},\r\n    \"systemGroup\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "20. Invalid - Update property group with name in body doesn't match with name in url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify message\", \"The name on the provided property group does not match the resource location and cannot be changed.\", pm.response.json().Error.Message);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"NewPropertyGroup{{$randomInt}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 1,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "21. Invalid - Update property group without name at body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The Name field is required.\", pm.response.json().Error.Details[0].InnerError[0]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cleanup: Delete property group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(204);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "22. Create property group by PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(201);\r",
											"requestBody = JSON.parse(request.data);\r",
											"\r",
											"Assert.IsEqual(\"Verify response\", requestBody, pm.response.json());\r",
											"pm.environment.set(\"requestData\", requestBody);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"propertyGroupName\", getRandomString(32));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"{{propertyGroupName}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 1,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the new Property Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(200);\r",
											"Assert.IsEqual(\"Verify response\", pm.environment.get(\"requestData\"), pm.response.json());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cleanup: Delete property group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(204);\r",
											"\r",
											"pm.environment.unset(\"propertyGroupName\");\r",
											"pm.environment.unset(\"requestData\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete Property Group",
					"item": [
						{
							"name": "25. Prepare for delete property group - Create new property group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(201);\r",
											"pm.environment.set(\"propertyGroupName\", pm.response.json().name);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"NewPropertyGroup{{$randomInt}}\",\r\n\t\"displayName\": \"New-Property-Group-{{$randomInt}}\",\r\n\t\"sortOrder\": 1,\r\n\t\"systemGroup\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete the property group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(204);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get deleted property group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(404);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete none existed property group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(404);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Get none existed property group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(404);\r",
											"\r",
											"pm.environment.unset(\"propertyGroupName\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_PropertyGroupEndpoint}}/{{propertyGroupName}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_PropertyGroupEndpoint}}",
										"{{propertyGroupName}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "ContentType",
			"item": [
				{
					"name": "Create ContentType",
					"item": [
						{
							"name": "1. Create content type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(201);\r",
											"\r",
											"requestBody = JSON.parse(request.data);\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if(requestBody.id !== responseBody.id)\r",
											"    requestBody.id = responseBody.id;\r",
											"\r",
											"for(i = 0; i < responseBody.properties.length; i++)\r",
											"    if(responseBody.properties[i].branchSpecific !== undefined)\r",
											"        requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
											"        \r",
											"requestBody = SortJson(requestBody);\r",
											"responseBody = SortJson(responseBody);\r",
											"\r",
											"Assert.IsEqual(\"Verify response\", requestBody, responseBody);\r",
											"\r",
											"pm.environment.set(\"contentTypeGuid\", responseBody.id);\r",
											"pm.environment.set(\"requestData\", responseBody);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"baseTypeList\", [\"Page\", \"Block\"]);\r",
											"\r",
											"count = 0;\r",
											"if(pm.variables.has(\"count\"))\r",
											"    count = parseInt(pm.variables.get(\"count\"));\r",
											"else\r",
											"    pm.variables.set(\"count\", count);\r",
											"    \r",
											"pm.variables.set(\"baseType\", pm.variables.get(\"baseTypeList\")[count]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept-encoding": true,
									"connection": true,
									"user-agent": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"type": "text",
										"value": ".AspNet.ApplicationCookie={{appCookie}}",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"{{$guid}}\",\r\n\t\"name\": \"AllProperties{{baseType}}{{$randomInt}}\",\r\n\t\"baseType\": \"{{baseType}}\",\r\n\t\"version\": \"1.1.0.0\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"BoolProp\",\r\n\t\t\t\"dataType\": \"PropertyBoolean\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"BoolProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 1\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"CategoryListProp\",\r\n\t\t\t\"dataType\": \"PropertyCategory\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Category\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 2\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ContReferProp\",\r\n\t\t\t\"dataType\": \"PropertyContentReference\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"ContReferProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 3\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DateTimeProp\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"DateTimeProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 4\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FloatProp\",\r\n\t\t\t\"dataType\": \"PropertyFloatNumber\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"FloatProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 5\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LongStringProp\",\r\n\t\t\t\"dataType\": \"PropertyLongString\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"LongStringProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 6\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntProp\",\r\n\t\t\t\"dataType\": \"PropertyNumber\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"IntProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 7\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"PageReferenceProp\",\r\n\t\t\t\"dataType\": \"PropertyPageReference\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PageReferenceProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 8\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"PageTypeProp\",\r\n\t\t\t\"dataType\": \"PropertyPageType\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PageTypeProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 9\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"StringProp\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"StringProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 10\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"AppSettings\",\r\n\t\t\t\"dataType\": \"PropertyAppSettings\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Property2\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 11\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"AppSettingsMultiple\",\r\n\t\t\t\"dataType\": \"PropertyAppSettingsMultiple\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"AppSettingsMultiple\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 12\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"BlobProp\",\r\n\t\t\t\"dataType\": \"PropertyBlob\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"BlobProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 13\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"EditorialBlock\",\r\n\t\t\t\"dataType\": \"PropertyBlock\",\r\n\t\t\t\"itemType\": \"EditorialBlock\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Editorial Block\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 14\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ContentAreaProp\",\r\n\t\t\t\"dataType\": \"PropertyContentArea\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"ContentAreaProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 15\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ContReferListProp\",\r\n\t\t\t\"dataType\": \"PropertyContentReferenceList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"ContReferListProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 16\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DateListProp\",\r\n\t\t\t\"dataType\": \"PropertyDateList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"DateListProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 17\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DocumentURLProp\",\r\n\t\t\t\"dataType\": \"PropertyDocumentUrl\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyDocumentUrl\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 18\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DoubleListProp\",\r\n\t\t\t\"dataType\": \"PropertyDoubleList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyDoubleList\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 19\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DropDownList\",\r\n\t\t\t\"dataType\": \"PropertyDropDownList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"DropDownList\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 20\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FileSortOrder\",\r\n\t\t\t\"dataType\": \"PropertyFileSortOrder\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"FileSortOrder\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 21\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"Frame\",\r\n\t\t\t\"dataType\": \"PropertyFrame\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Frame\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 22\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ImageProp\",\r\n\t\t\t\"dataType\": \"PropertyImageUrl\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"ImageProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 23,\r\n\t\t\t\t\"hint\": \"Url\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerListProp\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyIntegerList\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 24\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LanguageProp\",\r\n\t\t\t\"dataType\": \"PropertyLanguage\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Language\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 25\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LinkItemCollectionProp\",\r\n\t\t\t\"dataType\": \"PropertyLinkCollection\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"LinkItemCollectionProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 26\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"Selector\",\r\n\t\t\t\"dataType\": \"PropertySelector\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Selector\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 27\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SortOrder\",\r\n\t\t\t\"dataType\": \"PropertySortOrder\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"SortOrder\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 28\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"StringListProp\",\r\n\t\t\t\"dataType\": \"PropertyStringList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"StringListProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 29\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"UrlProp\",\r\n\t\t\t\"dataType\": \"PropertyUrl\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"UrlProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 30,\r\n\t\t\t\t\"hint\": \"Url\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"WeekDayProp\",\r\n\t\t\t\"dataType\": \"PropertyWeekDay\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"WeekDayProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 31\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"VirtualLink\",\r\n\t\t\t\"dataType\": \"PropertyVirtualLink\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"VirtualLink\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 32\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"XHtmlStringProp\",\r\n\t\t\t\"dataType\": \"PropertyXhtmlString\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"XHtmlStringProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 33\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"CheckBoxListProp\",\r\n\t\t\t\"dataType\": \"PropertyCheckBoxList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 34,\r\n\t\t\t\t\"visibility\": \"default\"\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get created content type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(200);\r",
											"Assert.IsEqual(\"Verify response\", SortJson(pm.environment.get(\"requestData\")), SortJson(pm.response.json()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cleanup: Delete the contentType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(204);\r",
											"\r",
											"// Loop to create new content type\r",
											"count = parseInt(pm.variables.get(\"count\"));\r",
											"baseTypeList = pm.variables.get(\"baseTypeList\");\r",
											"\r",
											"if(count < baseTypeList.length - 1)\r",
											"{\r",
											"    pm.variables.set(\"count\", count + 1);\r",
											"    postman.setNextRequest(\"1. Create content type\");\r",
											"}\r",
											"else\r",
											"{\r",
											"    pm.variables.unset(\"count\");\r",
											"    pm.variables.unset(\"baseTypeList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Create contentType with displayName, Hint, HelpText contain special characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(!pm.variables.has(\"baseTypeList\"))\r",
											"    pm.variables.set(\"baseTypeList\", [\"Page\", \"Block\"]);\r",
											"\r",
											"count = 0;\r",
											"if(pm.variables.has(\"count\"))\r",
											"    count = parseInt(pm.variables.get(\"count\"));\r",
											"else\r",
											"    pm.variables.set(\"count\", count);\r",
											"    \r",
											"pm.variables.set(\"baseType\", pm.variables.get(\"baseTypeList\")[count]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(201);\r",
											"\r",
											"requestBody = JSON.parse(request.data);\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"requestBody.id = responseBody.id;\r",
											"\r",
											"for(i = 0; i < responseBody.properties.length; i++)\r",
											"    if(responseBody.properties[i].branchSpecific !== undefined)\r",
											"        requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
											"Assert.IsEqual(\"Verify response\", SortJson(requestBody), SortJson(responseBody));\r",
											"\r",
											"pm.environment.set(\"contentTypeGuid\", responseBody.id);\r",
											"pm.environment.set(\"requestData\", responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"ContentType{{baseType}}2{{$randomInt}}\",\r\n\t\"baseType\": \"{{baseType}}\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"PropertyName2{{$randomInt}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"~`!@#$%^&*()-_+=[]{}\\\\|:\\\";',./<>?\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"helpText\": \"~`!@#$%^&*()-_+=[]{}\\\\|:\\\";',./<>?\",\r\n\t\t\t\t\"hint\": \"~`!@#$%^&*()-_+=[]{}\\\\|:\\\";',./<>?\",\r\n\t\t\t\t\"sortOrder\": {{$randomInt}}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get created content type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(200);\r",
											"Assert.IsEqual(\"Verify response\", SortJson(pm.environment.get(\"requestData\")), SortJson(pm.response.json()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cleanup: Delete the contentType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(204);\r",
											"\r",
											"// Loop to create new content type\r",
											"count = parseInt(pm.variables.get(\"count\"));\r",
											"baseTypeList = pm.variables.get(\"baseTypeList\");\r",
											"\r",
											"if(count < baseTypeList.length - 1)\r",
											"{\r",
											"    pm.variables.set(\"count\", count + 1);\r",
											"    postman.setNextRequest(\"2. Create contentType with displayName, Hint, HelpText contain special characters\");\r",
											"}\r",
											"else\r",
											"{\r",
											"    pm.variables.unset(\"count\");\r",
											"    pm.variables.unset(\"baseTypeList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Create ContentType with spaces at begin and end of displayName, groupName, hint, helpText",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(!pm.variables.has(\"baseTypeList\"))\r",
											"    pm.variables.set(\"baseTypeList\", [\"Page\", \"Block\"]);\r",
											"\r",
											"count = 0;\r",
											"if(pm.variables.has(\"count\"))\r",
											"    count = parseInt(pm.variables.get(\"count\"));\r",
											"else\r",
											"    pm.variables.set(\"count\", count);\r",
											"    \r",
											"pm.variables.set(\"baseType\", pm.variables.get(\"baseTypeList\")[count]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(201);\r",
											"\r",
											"requestBody = JSON.parse(request.data);\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"requestBody.id = responseBody.id;\r",
											"\r",
											"for(i = 0; i < responseBody.properties.length; i++)\r",
											"{\r",
											"    if(responseBody.properties[i].branchSpecific !== undefined)\r",
											"        requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
											"    requestBody.properties[i].editSettings.displayName = requestBody.properties[i].editSettings.displayName.trim();\r",
											"    requestBody.properties[i].editSettings.groupName = requestBody.properties[i].editSettings.groupName.trim();\r",
											"    requestBody.properties[i].editSettings.hint = requestBody.properties[i].editSettings.hint.trim();\r",
											"    requestBody.properties[i].editSettings.helpText = requestBody.properties[i].editSettings.helpText.trim();\r",
											"}\r",
											"Assert.IsEqual(\"Verify response\", SortJson(requestBody), SortJson(responseBody));\r",
											"\r",
											"pm.environment.set(\"contentTypeGuid\", responseBody.id);\r",
											"pm.environment.set(\"requestData\", responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"ContentType{{baseType}}3{{$randomInt}}\",\r\n\t\"baseType\": \"{{baseType}}\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"ContentProperty3{{$randomInt}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"hidden\",\r\n\t\t\t\t\"displayName\": \"  users   \",\r\n\t\t\t\t\"groupName\": \"  Information  \",\r\n\t\t\t\t\"helpText\": \"   International   \",\r\n\t\t\t\t\"hint\": \"  Fresh    \",\r\n\t\t\t\t\"sortOrder\": 609058213\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get created content type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(200);\r",
											"Assert.IsEqual(\"Verify response\", SortJson(pm.environment.get(\"requestData\")), SortJson(pm.response.json()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cleanup: Delete the contentType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(204);\r",
											"\r",
											"// Loop to create new content type\r",
											"count = parseInt(pm.variables.get(\"count\"));\r",
											"baseTypeList = pm.variables.get(\"baseTypeList\");\r",
											"\r",
											"if(count < baseTypeList.length - 1)\r",
											"{\r",
											"    pm.variables.set(\"count\", count + 1);\r",
											"    postman.setNextRequest(\"3. Create ContentType with spaces at begin and end of displayName, groupName, hint, helpText\");\r",
											"}\r",
											"else\r",
											"{\r",
											"    pm.variables.unset(\"count\");\r",
											"    pm.variables.unset(\"baseTypeList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Create none existed ContentType with maxLength_of_properties",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(!pm.variables.has(\"baseTypeList\"))\r",
											"    pm.variables.set(\"baseTypeList\", [\"Page\", \"Block\"]);\r",
											"\r",
											"count = 0;\r",
											"if(pm.variables.has(\"count\"))\r",
											"    count = parseInt(pm.variables.get(\"count\"));\r",
											"else\r",
											"    pm.variables.set(\"count\", count);\r",
											"    \r",
											"pm.variables.set(\"baseType\", pm.variables.get(\"baseTypeList\")[count]);\r",
											"pm.variables.set(\"contentTypeName\", \"a\" + getRandomString(49));\r",
											"pm.variables.set(\"propertyName\", \"b\" + getRandomString(99));\r",
											"pm.variables.set(\"displayName\", \"c\" + getRandomString(254));\r",
											"pm.variables.set(\"helpText\", getRandomString(2000));\r",
											"pm.variables.set(\"hint\", getRandomString(255));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(201);\r",
											"\r",
											"requestBody = JSON.parse(request.data);\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"requestBody.id = responseBody.id;\r",
											"\r",
											"for(i = 0; i < responseBody.properties.length; i++)\r",
											"    if(responseBody.properties[i].branchSpecific !== undefined)\r",
											"        requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
											"Assert.IsEqual(\"Verify response\", SortJson(requestBody), SortJson(responseBody));\r",
											"\r",
											"pm.environment.set(\"contentTypeGuid\", responseBody.id);\r",
											"pm.environment.set(\"requestData\", responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"{{contentTypeName}}\",\r\n\t\"baseType\": \"{{baseType}}\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"{{propertyName}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"hidden\",\r\n\t\t\t\t\"displayName\": \"{{displayName}}\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"helpText\": \"{{helpText}}\",\r\n\t\t\t\t\"hint\": \"{{hint}}\",\r\n\t\t\t\t\"sortOrder\": {{$randomInt}}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get created content type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(200);\r",
											"Assert.IsEqual(\"Verify response\", SortJson(pm.environment.get(\"requestData\")), SortJson(pm.response.json()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cleanup: Delete the contentType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(204);\r",
											"\r",
											"// Loop to create new content type\r",
											"count = parseInt(pm.variables.get(\"count\"));\r",
											"baseTypeList = pm.variables.get(\"baseTypeList\");\r",
											"\r",
											"if(count < baseTypeList.length - 1)\r",
											"{\r",
											"    pm.variables.set(\"count\", count + 1);\r",
											"    postman.setNextRequest(\"4. Create none existed ContentType with maxLength_of_properties\");\r",
											"}\r",
											"else\r",
											"{\r",
											"    pm.variables.unset(\"count\");\r",
											"    pm.variables.unset(\"baseTypeList\");\r",
											"    pm.variables.unset(\"contentTypeName\");\r",
											"    pm.variables.unset(\"propertyName\");\r",
											"    pm.variables.unset(\"displayName\");\r",
											"    pm.variables.unset(\"helpText\");\r",
											"    pm.variables.unset(\"hint\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Create ContentType with with missing hint, groupName, helpText, orderBy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(!pm.variables.has(\"baseTypeList\"))\r",
											"    pm.variables.set(\"baseTypeList\", [\"Page\", \"Block\"]);\r",
											"\r",
											"count = 0;\r",
											"if(pm.variables.has(\"count\"))\r",
											"    count = parseInt(pm.variables.get(\"count\"));\r",
											"else\r",
											"    pm.variables.set(\"count\", count);\r",
											"    \r",
											"pm.variables.set(\"baseType\", pm.variables.get(\"baseTypeList\")[count]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(201);\r",
											"\r",
											"requestBody = JSON.parse(request.data);\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"requestBody.id = responseBody.id;\r",
											"// New created content type - default property's group name is Information\r",
											"requestBody.properties[0].editSettings.groupName = responseBody.properties[0].editSettings.groupName;\r",
											"\r",
											"Assert.IsEqual(\"Verify response\", SortJson(requestBody), SortJson(responseBody));\r",
											"\r",
											"pm.environment.set(\"contentTypeGuid\", responseBody.id);\r",
											"pm.environment.set(\"requestData\", responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"ContentType{{baseType}}5{{$randomInt}}\",\r\n\t\"baseType\": \"{{baseType}}\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"ContentProperty3{{$randomInt}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"ContentProperty 3 {{$randomInt}}\",\r\n\t\t\t\t\"sortOrder\": {{$randomInt}}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get created content type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(200);\r",
											"\r",
											"Assert.IsEqual(\"Verify response\", SortJson(pm.environment.get(\"requestData\")), SortJson(pm.response.json()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cleanup: Delete the contentType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(204);\r",
											"\r",
											"// Loop to create new content type\r",
											"count = parseInt(pm.variables.get(\"count\"));\r",
											"baseTypeList = pm.variables.get(\"baseTypeList\");\r",
											"\r",
											"if(count < baseTypeList.length - 1)\r",
											"{\r",
											"    pm.variables.set(\"count\", count + 1);\r",
											"    postman.setNextRequest(\"5. Create ContentType with with missing hint, groupName, helpText, orderBy\");\r",
											"}\r",
											"else\r",
											"{\r",
											"    pm.variables.unset(\"count\");\r",
											"    pm.variables.unset(\"baseTypeList\");\r",
											"    pm.environment.unset(\"requestData\");\r",
											"    pm.environment.unset(\"contentTypeGuid\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Preparation - Get existed content type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"responseData = pm.response.json();\r",
											"pm.environment.set(\"existedContentTypeName\", responseData[0].name);\r",
											"pm.environment.set(\"existedContentTypeId\", responseData[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "6. Invalid - Create ContentType with existed name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(409);\r",
											"Assert.IsEqual(\"Verify message\", \"There is already another content type with the provided name.\", pm.response.json().Error.Message);\r",
											"\r",
											"pm.environment.unset(\"existedContentTypeName\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"{{existedContentTypeName}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"PropertyName6{{$randomInt}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyName6{{$randomInt}}\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"helpText\": \"PropertyName6{{$randomInt}}\",\r\n\t\t\t\t\"hint\": \"PropertyName6{{$randomInt}}\",\r\n\t\t\t\t\"sortOrder\": {{$randomInt}}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "7. Invalid - Create contentType with wrong baseType",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"invalidBaseType\", getRandomString(32));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify Inner Error message\", \"There is no base type registered with identifier '\" + pm.variables.get(\"invalidBaseType\") + \"'\", pm.response.json().Error.Details[0].InnerError[0]);\r",
											"\r",
											"pm.variables.unset(\"invalidBaseType\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"ContentTypeName7{{$randomInt}}\",\r\n\t\"baseType\": \"{{invalidBaseType}}\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"PropertyName7{{$randomInt}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyName7{{$randomInt}}\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"helpText\": \"PropertyName7{{$randomInt}}\",\r\n\t\t\t\t\"hint\": \"PropertyName7{{$randomInt}}\",\r\n\t\t\t\t\"sortOrder\": {{$randomInt}}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "8.1. Invalid - Create contentType name is null",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify Inner Error message\", \"The Name field is required.\", pm.response.json().Error.Details[0].InnerError[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\":null,\r\n    \"baseType\":\"Page\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "8.2. Invalid - Create contentType name is empty",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify Inner Error message\", \"The Name field is required.\", pm.response.json().Error.Details[0].InnerError[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\":\"\",\r\n    \"baseType\":\"Page\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "9. Invalid - Create a contentType with name contains special characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"invalidName\", getRandomStringIncludeSpecialCharacter(32));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsTrue(\"Verify inner error message\", pm.response.json().Error.Details[0].InnerError[0].startsWith(\"The field Name must match the regular expression\"));\r",
											"\r",
											"pm.variables.unset(\"invalidName\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"{{invalidName}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"PropertyName9{{$randomInt}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyName9{{$randomInt}}\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"helpText\": \"PropertyName9{{$randomInt}}\",\r\n\t\t\t\t\"hint\": \"PropertyName9{{$randomInt}}\",\r\n\t\t\t\t\"sortOrder\": {{$randomInt}}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "10. Invalid - Create a contentType with name.length>max",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"invalidName\", getRandomString(51));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The field Name must be a string or array type with a maximum length of '50'.\", pm.response.json().Error.Details[0].InnerError[0]);\r",
											"\r",
											"pm.variables.unset(\"invalidName\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"{{invalidName}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"PropertyName10{{$randomInt}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyName10{{$randomInt}}\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"helpText\": \"PropertyName10{{$randomInt}}\",\r\n\t\t\t\t\"hint\": \"PropertyName10{{$randomInt}}\",\r\n\t\t\t\t\"sortOrder\": {{$randomInt}}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "11. Invalid - Create ContentType with propertyName_displayName_hint_helpText.length>max",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"invalidPropertyName\", getRandomString(101));\r",
											"pm.variables.set(\"invalidDisplayName\", getRandomString(256));\r",
											"pm.variables.set(\"invalidHelpText\", getRandomString(2001));\r",
											"pm.variables.set(\"invalidHint\", getRandomString(256));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The field Name must be a string or array type with a maximum length of '100'.\", pm.response.json().Error.Details[0].InnerError[0]);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The field DisplayName must be a string or array type with a maximum length of '255'.\", pm.response.json().Error.Details[1].InnerError[0]);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The field HelpText must be a string or array type with a maximum length of '2000'.\", pm.response.json().Error.Details[2].InnerError[0]);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The field Hint must be a string or array type with a maximum length of '255'.\", pm.response.json().Error.Details[3].InnerError[0]);\r",
											"\r",
											"pm.variables.unset(\"invalidPropertyName\");\r",
											"pm.variables.unset(\"invalidDisplayName\");\r",
											"pm.variables.unset(\"invalidHelpText\");\r",
											"pm.variables.unset(\"invalidHint\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"ContentTypeName11{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"{{invalidPropertyName}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"hidden\",\r\n\t\t\t\t\"displayName\": \"{{invalidDisplayName}}\",\r\n\t\t\t\t\"groupName\": \"  Information  \",\r\n\t\t\t\t\"helpText\": \"{{invalidHelpText}}\",\r\n\t\t\t\t\"hint\": \"{{invalidHint}}\",\r\n\t\t\t\t\"sortOrder\": {{$randomInt}}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "12.1. Invalid - Create ContentType with order out of range =-1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The field SortOrder must be between 0 and 2147483647.\", pm.response.json().Error.Details[0].InnerError[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"ContentTypeName12{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"PropertyName12{{$randomInt}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyName12{{$randomInt}}\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"helpText\": \"PropertyName12{{$randomInt}}\",\r\n\t\t\t\t\"hint\": \"PropertyName12{{$randomInt}}\",\r\n\t\t\t\t\"sortOrder\": -1\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "12.2 Invalid - Create ContentType with order out of range = 2147483648",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsTrue(\"Verify inner error message\", pm.response.json().Error.Details[0].InnerError[0].startsWith(\"Could not convert to integer: 2147483648. Path 'editSettings.sortOrder'\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"ContentTypeName12{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"PropertyName12{{$randomInt}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyName12{{$randomInt}}\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"helpText\": \"PropertyName12{{$randomInt}}\",\r\n\t\t\t\t\"hint\": \"PropertyName12{{$randomInt}}\",\r\n\t\t\t\t\"sortOrder\": 2147483648\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "13. Invalid Create ContentType with duplicated propertyName",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"propertyName\", getRandomString(10));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"Multiple properties with name '\" + pm.variables.get(\"propertyName\") + \"' found.\", pm.response.json().Error.Details[0].InnerError[0]);\r",
											"\r",
											"pm.variables.unset(\"propertyName\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"ContentTypeName13{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"{{propertyName}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyName13{{$randomInt}}\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"helpText\": \"PropertyName13{{$randomInt}}\",\r\n\t\t\t\t\"hint\": \"PropertyName13{{$randomInt}}\",\r\n\t\t\t\t\"sortOrder\": {{$randomInt}}\r\n\t\t\t}\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"{{propertyName}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyName13{{$randomInt}}\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"helpText\": \"PropertyName13{{$randomInt}}\",\r\n\t\t\t\t\"hint\": \"PropertyName13{{$randomInt}}\",\r\n\t\t\t\t\"sortOrder\": {{$randomInt}}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "18. Invalid - Create contentType with existed id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(409);\r",
											"Assert.IsEqual(\"Verify message\", \"There is already another content type with the provided id.\", pm.response.json().Error.Message);\r",
											"\r",
											"pm.environment.unset(\"existedContentTypeId\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"{{existedContentTypeId}}\",\r\n\t\"name\": \"ContentTypeName18{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"PropertyName18{{$randomInt}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyName18{{$randomInt}}\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"helpText\": \"PropertyName18{{$randomInt}}\",\r\n\t\t\t\t\"hint\": \"PropertyName18{{$randomInt}}\",\r\n\t\t\t\t\"sortOrder\": {{$randomInt}}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "21. Invalid - Create contentType with non existed groupName",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"invalidGroupName\", getRandomString(10));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify inner error message\", \"The group \" + pm.variables.get(\"invalidGroupName\") + \" is not valid.\", pm.response.json().Error.Details[0].InnerError[0]);\r",
											"\r",
											"pm.variables.unset(\"invalidGroupName\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"ContentTypeName21{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"PropertyName21{{$randomInt}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyName21{{$randomInt}}\",\r\n\t\t\t\t\"groupName\": \"{{invalidGroupName}}\",\r\n\t\t\t\t\"helpText\": \"PropertyName21{{$randomInt}}\",\r\n\t\t\t\t\"hint\": \"PropertyName21{{$randomInt}}\",\r\n\t\t\t\t\"sortOrder\": {{$randomInt}}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update ContentType",
					"item": [
						{
							"name": "Preparation - Create content type for update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(201);\r",
											"\r",
											"requestBody = JSON.parse(request.data);\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if(requestBody.id !== responseBody.id)\r",
											"    requestBody.id = responseBody.id;\r",
											"\r",
											"for(i = 0; i < responseBody.properties.length; i++)\r",
											"    if(responseBody.properties[i].branchSpecific !== undefined)\r",
											"        requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
											"\r",
											"requestBody = SortJson(requestBody);\r",
											"responseBody = SortJson(responseBody);\r",
											"Assert.IsEqual(\"Verify response\", requestBody, responseBody);\r",
											"\r",
											"pm.environment.set(\"contentTypeGuid\", responseBody.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"baseTypeList\", [\"Page\", \"Block\"]);\r",
											"\r",
											"count = 0;\r",
											"if(pm.variables.has(\"count\"))\r",
											"    count = parseInt(pm.variables.get(\"count\"));\r",
											"else\r",
											"    pm.variables.set(\"count\", 0);\r",
											"    \r",
											"pm.environment.set(\"baseType\", pm.variables.get(\"baseTypeList\")[count]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept-encoding": true,
									"connection": true,
									"user-agent": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"type": "text",
										"value": ".AspNet.ApplicationCookie={{appCookie}}",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"{{$guid}}\",\r\n\t\"name\": \"AllProperties{{baseType}}{{$randomInt}}\",\r\n\t\"baseType\": \"{{baseType}}\",\r\n\t\"version\": \"1.1.0.0\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"BoolProp\",\r\n\t\t\t\"dataType\": \"PropertyBoolean\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"BoolProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 1\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"CategoryListProp\",\r\n\t\t\t\"dataType\": \"PropertyCategory\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Category\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 2\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ContReferProp\",\r\n\t\t\t\"dataType\": \"PropertyContentReference\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"ContReferProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 3\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DateTimeProp\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"DateTimeProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 4\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FloatProp\",\r\n\t\t\t\"dataType\": \"PropertyFloatNumber\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"FloatProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 5\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LongStringProp\",\r\n\t\t\t\"dataType\": \"PropertyLongString\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"LongStringProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 6\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntProp\",\r\n\t\t\t\"dataType\": \"PropertyNumber\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"IntProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 7\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"PageReferenceProp\",\r\n\t\t\t\"dataType\": \"PropertyPageReference\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PageReferenceProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 8\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"PageTypeProp\",\r\n\t\t\t\"dataType\": \"PropertyPageType\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PageTypeProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 9\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"StringProp\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"StringProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 10\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"AppSettings\",\r\n\t\t\t\"dataType\": \"PropertyAppSettings\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Property2\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 11\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"AppSettingsMultiple\",\r\n\t\t\t\"dataType\": \"PropertyAppSettingsMultiple\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"AppSettingsMultiple\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 12\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"BlobProp\",\r\n\t\t\t\"dataType\": \"PropertyBlob\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"BlobProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 13\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"EditorialBlock\",\r\n\t\t\t\"dataType\": \"PropertyBlock\",\r\n\t\t\t\"itemType\": \"EditorialBlock\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Editorial Block\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 14\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ContentAreaProp\",\r\n\t\t\t\"dataType\": \"PropertyContentArea\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"ContentAreaProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 15\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ContReferListProp\",\r\n\t\t\t\"dataType\": \"PropertyContentReferenceList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"ContReferListProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 16\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DateListProp\",\r\n\t\t\t\"dataType\": \"PropertyDateList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"DateListProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 17\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DocumentURLProp\",\r\n\t\t\t\"dataType\": \"PropertyDocumentUrl\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyDocumentUrl\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 18\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DoubleListProp\",\r\n\t\t\t\"dataType\": \"PropertyDoubleList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyDoubleList\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 19\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DropDownList\",\r\n\t\t\t\"dataType\": \"PropertyDropDownList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"DropDownList\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 20\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FileSortOrder\",\r\n\t\t\t\"dataType\": \"PropertyFileSortOrder\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"FileSortOrder\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 21\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"Frame\",\r\n\t\t\t\"dataType\": \"PropertyFrame\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Frame\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 22\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ImageProp\",\r\n\t\t\t\"dataType\": \"PropertyImageUrl\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"ImageProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 23,\r\n\t\t\t\t\"hint\": \"Url\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerListProp\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyIntegerList\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 24\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LanguageProp\",\r\n\t\t\t\"dataType\": \"PropertyLanguage\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Language\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 25\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LinkItemCollectionProp\",\r\n\t\t\t\"dataType\": \"PropertyLinkCollection\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"LinkItemCollectionProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 26\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"Selector\",\r\n\t\t\t\"dataType\": \"PropertySelector\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Selector\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 27\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SortOrder\",\r\n\t\t\t\"dataType\": \"PropertySortOrder\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"SortOrder\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 28\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"StringListProp\",\r\n\t\t\t\"dataType\": \"PropertyStringList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"StringListProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 29\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"UrlProp\",\r\n\t\t\t\"dataType\": \"PropertyUrl\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"UrlProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 30,\r\n\t\t\t\t\"hint\": \"Url\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"WeekDayProp\",\r\n\t\t\t\"dataType\": \"PropertyWeekDay\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"WeekDayProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 31\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"VirtualLink\",\r\n\t\t\t\"dataType\": \"PropertyVirtualLink\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"VirtualLink\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 32\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"XHtmlStringProp\",\r\n\t\t\t\"dataType\": \"PropertyXhtmlString\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"XHtmlStringProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 33\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"CheckBoxListProp\",\r\n\t\t\t\"dataType\": \"PropertyCheckBoxList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 34,\r\n\t\t\t\t\"visibility\": \"default\"\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "14. Update content type editSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(200);\r",
											"\r",
											"requestBody = JSON.parse(request.data);\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if(requestBody.id !== responseBody.id)\r",
											"    requestBody.id = responseBody.id;\r",
											"\r",
											"for(i = 0; i < responseBody.properties.length; i++)\r",
											"    if(responseBody.properties[i].branchSpecific !== undefined)\r",
											"        requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
											"\r",
											"requestBody = SortContentTypeByPropertiesOrder(responseBody);\r",
											"Assert.IsEqual(\"Verify response\", requestBody, responseBody);\r",
											"\r",
											"pm.environment.set(\"updatedRequestData\", requestBody);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"visibilityList = [\"Default\", \"Hidden\"];\r",
											"groupNameList = [\"Information\", \"Default\", \"Contact\"];\r",
											"editSettings =  {\r",
											"\t\t\t\t\"visibility\": visibilityList[Math.floor(Math.random()*visibilityList.length)],\r",
											"\t\t\t\t\"displayName\": \"UpdatedBoolProp\",\r",
											"\t\t\t\t\"groupName\": groupNameList[Math.floor(Math.random()*groupNameList.length)],\r",
											"\t\t\t\t\"sortOrder\":  _.random(1, 100)\r",
											"\t\t\t}\r",
											"pm.environment.set(\"editSettings\", JSON.stringify(editSettings));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept-encoding": true,
									"connection": true,
									"user-agent": true
								}
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Cookie",
										"type": "text",
										"value": ".AspNet.ApplicationCookie={{appCookie}}",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"AllProperties{{baseType}}{{$randomInt}}\",\r\n    \"baseType\": \"{{baseType}}\",\r\n    \"version\": \"2.1.0.0\",\r\n    \"allowedUpgrades\": \"major\",\r\n    \"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"BoolProp\",\r\n\t\t\t\"dataType\": \"PropertyBoolean\",\r\n\t\t\t\"editSettings\": {{editSettings}}\r\n\t\t},\r\n        {\r\n            \"name\": \"CategoryListProp\",\r\n            \"dataType\": \"PropertyCategory\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"Category\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 2\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"ContReferProp\",\r\n            \"dataType\": \"PropertyContentReference\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"ContReferProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 3\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"DateTimeProp\",\r\n            \"dataType\": \"PropertyDate\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"DateTimeProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 4\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"FloatProp\",\r\n            \"dataType\": \"PropertyFloatNumber\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"FloatProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 5\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"LongStringProp\",\r\n            \"dataType\": \"PropertyLongString\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"LongStringProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 6\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"IntProp\",\r\n            \"dataType\": \"PropertyNumber\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"IntProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 7\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"PageReferenceProp\",\r\n            \"dataType\": \"PropertyPageReference\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"PageReferenceProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 8\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"PageTypeProp\",\r\n            \"dataType\": \"PropertyPageType\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"PageTypeProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 9\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"StringProp\",\r\n            \"dataType\": \"PropertyString\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"StringProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 10\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"AppSettings\",\r\n            \"dataType\": \"PropertyAppSettings\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"Property2\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 11\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"AppSettingsMultiple\",\r\n            \"dataType\": \"PropertyAppSettingsMultiple\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"AppSettingsMultiple\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 12\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"BlobProp\",\r\n            \"dataType\": \"PropertyBlob\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"BlobProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 13\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"EditorialBlock\",\r\n            \"dataType\": \"PropertyBlock\",\r\n            \"itemType\": \"EditorialBlock\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"Editorial Block\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 14\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"ContentAreaProp\",\r\n            \"dataType\": \"PropertyContentArea\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"ContentAreaProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 15\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"ContReferListProp\",\r\n            \"dataType\": \"PropertyContentReferenceList\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"ContReferListProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 16\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"DateListProp\",\r\n            \"dataType\": \"PropertyDateList\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"DateListProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 17\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"DocumentURLProp\",\r\n            \"dataType\": \"PropertyDocumentUrl\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"PropertyDocumentUrl\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 18\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"DoubleListProp\",\r\n            \"dataType\": \"PropertyDoubleList\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"PropertyDoubleList\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 19\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"DropDownList\",\r\n            \"dataType\": \"PropertyDropDownList\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"DropDownList\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 20\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"FileSortOrder\",\r\n            \"dataType\": \"PropertyFileSortOrder\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"FileSortOrder\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 21\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"Frame\",\r\n            \"dataType\": \"PropertyFrame\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"Frame\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 22\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"ImageProp\",\r\n            \"dataType\": \"PropertyImageUrl\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"ImageProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 23,\r\n                \"hint\": \"Url\"\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"IntegerListProp\",\r\n            \"dataType\": \"PropertyIntegerList\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"PropertyIntegerList\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 24\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"LanguageProp\",\r\n            \"dataType\": \"PropertyLanguage\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"Language\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 25\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"LinkItemCollectionProp\",\r\n            \"dataType\": \"PropertyLinkCollection\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"LinkItemCollectionProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 26\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"Selector\",\r\n            \"dataType\": \"PropertySelector\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"Selector\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 27\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"SortOrder\",\r\n            \"dataType\": \"PropertySortOrder\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"SortOrder\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 28\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"StringListProp\",\r\n            \"dataType\": \"PropertyStringList\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"StringListProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 29\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"UrlProp\",\r\n            \"dataType\": \"PropertyUrl\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"UrlProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 30,\r\n                \"hint\": \"Url\"\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"WeekDayProp\",\r\n            \"dataType\": \"PropertyWeekDay\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"WeekDayProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 31\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"VirtualLink\",\r\n            \"dataType\": \"PropertyVirtualLink\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"VirtualLink\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 32\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"XHtmlStringProp\",\r\n            \"dataType\": \"PropertyXhtmlString\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"XHtmlStringProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 33\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"CheckBoxListProp\",\r\n            \"dataType\": \"PropertyCheckBoxList\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 34\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}?allowedUpgrades=major",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									],
									"query": [
										{
											"key": "allowedUpgrades",
											"value": "major"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get updated content type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(200);\r",
											"Assert.IsEqual(\"Verify response\", SortJson(pm.environment.get(\"updatedRequestData\")), SortJson(SortContentTypeByPropertiesOrder(pm.response.json())));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "15. Update contentType with adding properties",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"visibilityList = [\"Default\", \"Hidden\"];\r",
											"groupNameList = [\"Information\", \"Default\", \"Contact\"];\r",
											"newAddedProperty = {\r",
											"            \"name\": \"newAddedProperty\",\r",
											"            \"dataType\": \"PropertyString\",\r",
											"            \"branchSpecific\": false,\r",
											"            \"editSettings\": {\r",
											"\t\t\t\t\"visibility\": visibilityList[Math.floor(Math.random()*visibilityList.length)],\r",
											"\t\t\t\t\"displayName\": \"AddedProperty\",\r",
											"\t\t\t\t\"groupName\": groupNameList[Math.floor(Math.random()*groupNameList.length)],\r",
											"\t\t\t\t\"order\":  _.random(1, 100)\r",
											"            }\r",
											"        }\r",
											"pm.environment.set(\"newAddedProperty\", JSON.stringify(newAddedProperty));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(200);\r",
											"\r",
											"requestBody = JSON.parse(request.data);\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if(requestBody.id !== responseBody.id)\r",
											"    requestBody.id = responseBody.id;\r",
											"\r",
											"for(i = 0; i < responseBody.properties.length; i++)\r",
											"    if(responseBody.properties[i].branchSpecific !== undefined)\r",
											"        requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
											"\r",
											"requestBody = SortContentTypeByPropertiesOrder(responseBody);\r",
											"Assert.IsEqual(\"Verify response\", requestBody, responseBody);\r",
											"\r",
											"pm.environment.set(\"updatedRequestData\", requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"AllProperties{{baseType}}{{$randomInt}}\",\r\n    \"baseType\": \"{{baseType}}\",\r\n    \"version\": \"3.1.1.0\",\r\n    \"properties\": [\r\n        {{newAddedProperty}},\r\n\t\t{\r\n\t\t\t\"name\": \"BoolProp\",\r\n\t\t\t\"dataType\": \"PropertyBoolean\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"BoolProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 1\r\n\t\t\t}\r\n\t\t},\r\n        {\r\n            \"name\": \"CategoryListProp\",\r\n            \"dataType\": \"PropertyCategory\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"Category\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 2\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"ContReferProp\",\r\n            \"dataType\": \"PropertyContentReference\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"ContReferProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 3\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"DateTimeProp\",\r\n            \"dataType\": \"PropertyDate\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"DateTimeProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 4\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"FloatProp\",\r\n            \"dataType\": \"PropertyFloatNumber\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"FloatProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 5\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"LongStringProp\",\r\n            \"dataType\": \"PropertyLongString\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"LongStringProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 6\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"IntProp\",\r\n            \"dataType\": \"PropertyNumber\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"IntProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 7\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"PageReferenceProp\",\r\n            \"dataType\": \"PropertyPageReference\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"PageReferenceProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 8\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"PageTypeProp\",\r\n            \"dataType\": \"PropertyPageType\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"PageTypeProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 9\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"StringProp\",\r\n            \"dataType\": \"PropertyString\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"StringProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 10\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"AppSettings\",\r\n            \"dataType\": \"PropertyAppSettings\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"Property2\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 11\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"AppSettingsMultiple\",\r\n            \"dataType\": \"PropertyAppSettingsMultiple\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"AppSettingsMultiple\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 12\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"BlobProp\",\r\n            \"dataType\": \"PropertyBlob\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"BlobProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 13\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"EditorialBlock\",\r\n            \"dataType\": \"PropertyBlock\",\r\n            \"itemType\": \"EditorialBlock\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"Editorial Block\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 14\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"ContentAreaProp\",\r\n            \"dataType\": \"PropertyContentArea\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"ContentAreaProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 15\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"ContReferListProp\",\r\n            \"dataType\": \"PropertyContentReferenceList\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"ContReferListProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 16\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"DateListProp\",\r\n            \"dataType\": \"PropertyDateList\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"DateListProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 17\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"DocumentURLProp\",\r\n            \"dataType\": \"PropertyDocumentUrl\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"PropertyDocumentUrl\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 18\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"DoubleListProp\",\r\n            \"dataType\": \"PropertyDoubleList\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"PropertyDoubleList\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 19\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"DropDownList\",\r\n            \"dataType\": \"PropertyDropDownList\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"DropDownList\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 20\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"FileSortOrder\",\r\n            \"dataType\": \"PropertyFileSortOrder\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"FileSortOrder\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 21\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"Frame\",\r\n            \"dataType\": \"PropertyFrame\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"Frame\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 22\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"ImageProp\",\r\n            \"dataType\": \"PropertyImageUrl\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"ImageProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 23,\r\n                \"hint\": \"Url\"\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"IntegerListProp\",\r\n            \"dataType\": \"PropertyIntegerList\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"PropertyIntegerList\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 24\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"LanguageProp\",\r\n            \"dataType\": \"PropertyLanguage\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"Language\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 25\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"LinkItemCollectionProp\",\r\n            \"dataType\": \"PropertyLinkCollection\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"LinkItemCollectionProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 26\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"Selector\",\r\n            \"dataType\": \"PropertySelector\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"Selector\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 27\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"SortOrder\",\r\n            \"dataType\": \"PropertySortOrder\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"SortOrder\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 28\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"StringListProp\",\r\n            \"dataType\": \"PropertyStringList\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"StringListProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 29\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"UrlProp\",\r\n            \"dataType\": \"PropertyUrl\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"UrlProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 30,\r\n                \"hint\": \"Url\"\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"WeekDayProp\",\r\n            \"dataType\": \"PropertyWeekDay\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"WeekDayProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 31\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"VirtualLink\",\r\n            \"dataType\": \"PropertyVirtualLink\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"VirtualLink\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 32\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"XHtmlStringProp\",\r\n            \"dataType\": \"PropertyXhtmlString\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"displayName\": \"XHtmlStringProp\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 33\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"CheckBoxListProp\",\r\n            \"dataType\": \"PropertyCheckBoxList\",\r\n            \"branchSpecific\": false,\r\n            \"editSettings\": {\r\n                \"visibility\": \"default\",\r\n                \"groupName\": \"Information\",\r\n                \"sortOrder\": 34\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}?allowedUpgrades=major",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									],
									"query": [
										{
											"key": "allowedUpgrades",
											"value": "major"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get updated content type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(200);\r",
											"Assert.IsEqual(\"Verify response\", SortJson(pm.environment.get(\"updatedRequestData\")), SortJson(SortContentTypeByPropertiesOrder(pm.response.json())));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cleanup - Delete content Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(204);\r",
											"\r",
											"// process to loop\r",
											"count = parseInt(pm.variables.get(\"count\"));\r",
											"baseTypeList = pm.variables.get(\"baseTypeList\");\r",
											"\r",
											"if(count < baseTypeList.length - 1)\r",
											"{\r",
											"    pm.variables.set(\"count\", count + 1);\r",
											"    postman.setNextRequest(\"Preparation - Create content type for update\");\r",
											"}\r",
											"else\r",
											"{\r",
											"    pm.variables.unset(\"count\");\r",
											"    pm.environment.unset(\"baseType\");\r",
											"    pm.environment.unset(\"editSettings\");\r",
											"    pm.environment.unset(\"updatedRequestData\");\r",
											"    pm.environment.unset(\"newAddedProperty\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "16. Create contentType by PUT request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"baseTypeList\", [\"Page\", \"Block\"]);\r",
											"\r",
											"count = 0;\r",
											"if(pm.variables.has(\"count\"))\r",
											"    count = parseInt(pm.variables.get(\"count\"));\r",
											"else\r",
											"    pm.variables.set(\"count\", 0);\r",
											"    \r",
											"pm.environment.set(\"baseType\", pm.variables.get(\"baseTypeList\")[count]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(201);\r",
											"requestBody = JSON.parse(request.data);\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if(requestBody.id !== responseBody.id)\r",
											"    requestBody.id = responseBody.id;\r",
											"\r",
											"for(i = 0; i < responseBody.properties.length; i++)\r",
											"    if(responseBody.properties[i].branchSpecific !== undefined)\r",
											"        requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
											"\r",
											"requestBody = SortContentTypeByPropertiesOrder(responseBody);\r",
											"Assert.IsEqual(\"Verify response\", requestBody, responseBody);\r",
											"\r",
											"pm.environment.set(\"updatedRequestData\", requestBody);\r",
											"pm.environment.set(\"contentTypeGuid\", responseBody.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"AllProperties{{baseType}}{{$randomInt}}\",\r\n\t\"baseType\": \"{{baseType}}\",\r\n\t\"version\": \"1.1.0.0\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"BoolProp\",\r\n\t\t\t\"dataType\": \"PropertyBoolean\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"BoolProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 1\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"CategoryListProp\",\r\n\t\t\t\"dataType\": \"PropertyCategory\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Category\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 2\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ContReferProp\",\r\n\t\t\t\"dataType\": \"PropertyContentReference\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"ContReferProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 3\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DateTimeProp\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"DateTimeProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 4\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FloatProp\",\r\n\t\t\t\"dataType\": \"PropertyFloatNumber\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"FloatProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 5\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LongStringProp\",\r\n\t\t\t\"dataType\": \"PropertyLongString\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"LongStringProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 6\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntProp\",\r\n\t\t\t\"dataType\": \"PropertyNumber\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"IntProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 7\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"PageReferenceProp\",\r\n\t\t\t\"dataType\": \"PropertyPageReference\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PageReferenceProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 8\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"PageTypeProp\",\r\n\t\t\t\"dataType\": \"PropertyPageType\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PageTypeProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 9\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"StringProp\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"StringProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 10\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"AppSettings\",\r\n\t\t\t\"dataType\": \"PropertyAppSettings\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Property2\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 11\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"AppSettingsMultiple\",\r\n\t\t\t\"dataType\": \"PropertyAppSettingsMultiple\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"AppSettingsMultiple\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 12\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"BlobProp\",\r\n\t\t\t\"dataType\": \"PropertyBlob\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"BlobProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 13\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"EditorialBlock\",\r\n\t\t\t\"dataType\": \"PropertyBlock\",\r\n\t\t\t\"itemType\": \"EditorialBlock\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Editorial Block\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 14\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ContentAreaProp\",\r\n\t\t\t\"dataType\": \"PropertyContentArea\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"ContentAreaProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 15\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ContReferListProp\",\r\n\t\t\t\"dataType\": \"PropertyContentReferenceList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"ContReferListProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 16\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DateListProp\",\r\n\t\t\t\"dataType\": \"PropertyDateList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"DateListProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 17\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DocumentURLProp\",\r\n\t\t\t\"dataType\": \"PropertyDocumentUrl\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyDocumentUrl\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 18\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DoubleListProp\",\r\n\t\t\t\"dataType\": \"PropertyDoubleList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyDoubleList\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 19\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DropDownList\",\r\n\t\t\t\"dataType\": \"PropertyDropDownList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"DropDownList\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 20\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FileSortOrder\",\r\n\t\t\t\"dataType\": \"PropertyFileSortOrder\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"FileSortOrder\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 21\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"Frame\",\r\n\t\t\t\"dataType\": \"PropertyFrame\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Frame\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 22\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ImageProp\",\r\n\t\t\t\"dataType\": \"PropertyImageUrl\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"ImageProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 23,\r\n\t\t\t\t\"hint\": \"Url\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerListProp\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"PropertyIntegerList\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 24\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LanguageProp\",\r\n\t\t\t\"dataType\": \"PropertyLanguage\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Language\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 25\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LinkItemCollectionProp\",\r\n\t\t\t\"dataType\": \"PropertyLinkCollection\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"LinkItemCollectionProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 26\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"Selector\",\r\n\t\t\t\"dataType\": \"PropertySelector\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"Selector\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 27\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SortOrder\",\r\n\t\t\t\"dataType\": \"PropertySortOrder\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"SortOrder\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 28\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"StringListProp\",\r\n\t\t\t\"dataType\": \"PropertyStringList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"StringListProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 29\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"UrlProp\",\r\n\t\t\t\"dataType\": \"PropertyUrl\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"UrlProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 30,\r\n\t\t\t\t\"hint\": \"Url\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"WeekDayProp\",\r\n\t\t\t\"dataType\": \"PropertyWeekDay\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"WeekDayProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 31\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"VirtualLink\",\r\n\t\t\t\"dataType\": \"PropertyVirtualLink\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"VirtualLink\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 32\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"XHtmlStringProp\",\r\n\t\t\t\"dataType\": \"PropertyXhtmlString\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"visibility\": \"default\",\r\n\t\t\t\t\"displayName\": \"XHtmlStringProp\",\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 33\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"CheckBoxListProp\",\r\n\t\t\t\"dataType\": \"PropertyCheckBoxList\",\r\n\t\t\t\"editSettings\": {\r\n\t\t\t\t\"groupName\": \"Information\",\r\n\t\t\t\t\"sortOrder\": 34,\r\n\t\t\t\t\"visibility\": \"default\"\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{$guid}}?allowedUpgrades=major",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{$guid}}"
									],
									"query": [
										{
											"key": "allowedUpgrades",
											"value": "major"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get created content type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(200);\r",
											"Assert.IsEqual(\"Verify response\", SortJson(pm.environment.get(\"updatedRequestData\")), SortJson(pm.response.json()));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cleanup - Delete content Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(204);\r",
											"\r",
											"// process to loop\r",
											"count = parseInt(pm.variables.get(\"count\"));\r",
											"baseTypeList = pm.variables.get(\"baseTypeList\");\r",
											"\r",
											"if(count < baseTypeList.length - 1)\r",
											"{\r",
											"    pm.variables.set(\"count\", count + 1);\r",
											"    postman.setNextRequest(\"16. Create contentType by PUT request\");\r",
											"}\r",
											"else\r",
											"{\r",
											"    pm.variables.unset(\"count\");\r",
											"    pm.environment.unset(\"baseType\");\r",
											"    pm.environment.unset(\"updatedRequestData\");\r",
											"    pm.environment.unset(\"contentTypeGuid\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{contentTypeGuid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete ContentType",
					"item": [
						{
							"name": "19. Delete non existed contentType",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(404);\r",
											"Assert.IsEqual(\"Verify message\", \"NotFound\", pm.response.json().Error.Message);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{$guid}}",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"{{$guid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "20 Delete a contentType that id is invalid guild",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"Assert.IsEqual(\"Verify message\", \"The request is invalid.\", pm.response.json().Error.Message);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/a6964cee-b7eb-4443-899c-70cadba558zz",
									"host": [
										"{{cmsUrl}}"
									],
									"path": [
										"{{HAPI:Definition_ContentTypeEndpoint}}",
										"a6964cee-b7eb-4443-899c-70cadba558zz"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var arrBaseType=[\"Page\", \"Block\", \"Video\", \"Image\", \"Media\"];",
							"pm.variables.set('arrBaseType', arrBaseType);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "HAPI-658 REST API to define validation rules",
			"item": [
				{
					"name": "Preparation - Create parent container page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"responseData = pm.response.json();\r",
									"guid = responseData.contentLink.guidValue;\r",
									"pm.environment.set(\"parentGuid\", guid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"Test Container Page {{$randomInt}}\",\r\n\t\"language\": {\r\n\t\t\"name\": \"en\"\r\n\t},\r\n\t\"startPublish\": \"2020-10-16T09:42:22Z\",\r\n\t\"stopPublish\": null,\r\n\t\"status\": \"published\",\r\n\t\"contentLink\": {},\r\n\t\"parentLink\": {\r\n\t\t\"id\": \"{{testContainerPageId}}\"\r\n\t},\r\n\t\"contentType\": [\r\n\t\t\"Page\",\r\n\t\t\"ContainerPage\"\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "1. Create content type with all validation types",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"requestBody = JSON.parse(request.data);\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"requestBody.id = responseBody.id;\r",
									"\r",
									"for(i = 0; i < responseBody.properties.length; i++)\r",
									"{\r",
									"    requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
									"    requestBody.properties[i].editSettings = responseBody.properties[i].editSettings;\r",
									"}\r",
									"requestBody = SortJson(requestBody);\r",
									"\r",
									"Assert.IsEqual(\"Verify response\",  requestBody,  SortJson(responseBody));\r",
									"\r",
									"pm.environment.set(\"contentTypeGuid\", responseBody.id);\r",
									"pm.environment.set(\"contentTypeName\", responseBody.name);\r",
									"pm.environment.set(\"requestData\", requestBody);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"ValidationCase{{$randomInt}}{{$randomInt}}\",\r\n  \"baseType\": \"Page\",\r\n  \"properties\": [\r\n    {\r\n      \"name\": \"Heading\",\r\n      \"dataType\": \"PropertyString\",\r\n      \"branchSpecific\": true,\r\n      \"validation\": [\r\n        {\r\n          \"name\": \"Length\",\r\n          \"minimum\": 2, \r\n          \"maximum\": 100,\r\n          \"severity\": \"error\",\r\n          \"errorMessage\": \"This is the customized message. The heading length should be bettween 2 and 100.\"\r\n        },\r\n        {\r\n          \"name\": \"RegularExpression\",\r\n          \"severity\": \"error\",\r\n          \"pattern\": \"^epi[\\\\w+]\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"IntegerList\",\r\n      \"dataType\": \"PropertyIntegerList\",\r\n      \"branchSpecific\": true,\r\n      \"validation\": [\r\n        {\r\n          \"name\": \"Length\",\r\n          \"severity\": \"error\",\r\n          \"minimum\": 2, \r\n          \"maximum\": 10\r\n        },\r\n        {\r\n          \"name\": \"ItemRange\",\r\n          \"severity\": \"error\",\r\n          \"minimum\": 1, \r\n          \"maximum\": 10\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"EventDate\",\r\n      \"dataType\": \"PropertyDate\",\r\n      \"branchSpecific\": true,\r\n      \"validation\": [\r\n        {\r\n          \"name\": \"Range\",\r\n          \"severity\": \"error\",\r\n          \"minimum\": \"2020-01-01T00:00:00\", \r\n          \"maximum\": \"2022-12-31T00:00:00\" \r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get created content type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(200);\r",
									"\r",
									"Assert.IsEqual(\"Verify response\", pm.environment.get(\"requestData\"), SortJson(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new content with valid properties",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"requestBody = SortJson(JSON.parse(request.data));\r",
									"responseBody = SortJson(pm.response.json());\r",
									"\r",
									"// update some added properties from response to request (for assertion and next step)\r",
									"requestBody.category = responseBody.category;\r",
									"requestBody.contentLink = responseBody.contentLink;\r",
									"requestBody.language = responseBody.language;\r",
									"requestBody.parentLink = responseBody.parentLink;\r",
									"requestBody.routeSegment = responseBody.routeSegment;\r",
									"requestBody.existingLanguages = responseBody.existingLanguages;\r",
									"requestBody.masterLanguage = responseBody.masterLanguage;\r",
									"requestBody.changed = responseBody.changed;\r",
									"requestBody.created = responseBody.created;\r",
									"requestBody.saved = responseBody.saved;\r",
									"\r",
									"requestBody = SortJson(requestBody);\r",
									"Assert.IsEqual(\"Verify response\", requestBody,  responseBody);\r",
									"pm.environment.set(\"requestData\", requestBody);\r",
									"pm.environment.set(\"contentId\", requestBody.contentLink.id);\r",
									"pm.environment.set(\"contentGuid\", responseBody.contentLink.guidValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"epiThis is the heading of new content\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2,\r\n            3\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify new created content",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(200);\r",
									"\r",
									"Assert.IsEqual(\"Verify get content\", pm.environment.get(\"requestData\"), SortJson(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							}
						],
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update new content version with valid properties",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(200);\r",
									"\r",
									"originalRequestData = pm.environment.get(\"requestData\");\r",
									"putRequestData = JSON.parse(request.data);\r",
									"responseBody = SortJson(pm.response.json());\r",
									"\r",
									"// update some added properties from response to request (for assertion and next step)\r",
									"putRequestData.category = originalRequestData.category;\r",
									"putRequestData.contentLink = originalRequestData.contentLink;\r",
									"putRequestData.language = originalRequestData.language;\r",
									"putRequestData.parentLink = originalRequestData.parentLink;\r",
									"putRequestData.routeSegment = originalRequestData.routeSegment;\r",
									"putRequestData.existingLanguages = originalRequestData.existingLanguages;\r",
									"putRequestData.masterLanguage = originalRequestData.masterLanguage;\r",
									"putRequestData.routeSegment = responseBody.routeSegment;\r",
									"putRequestData.changed = responseBody.changed;\r",
									"putRequestData.created = responseBody.created;\r",
									"putRequestData.saved = responseBody.saved;\r",
									"\r",
									"requestBody = SortJson(putRequestData);\r",
									"Assert.IsEqual(\"Verify response\", requestBody,  responseBody);\r",
									"pm.environment.set(\"requestData\", requestBody);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"epiThis is the heading of new content version PUT\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            7,\r\n            8,\r\n            9\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentGuid}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify new updated content version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(200);\r",
									"\r",
									"Assert.IsEqual(\"Verify get content\", pm.environment.get(\"requestData\"), SortJson(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							}
						],
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify content version with valid properties",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);\r",
									"\r",
									"pm.environment.set(\"patchRequestData\", JSON.parse(request.data));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"epiThis is the heading of PATCH\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            4,\r\n            5,\r\n            6\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify modified content version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(200);\r",
									"\r",
									"originalRequestData = pm.environment.get(\"requestData\");\r",
									"patchRequestData = pm.environment.get(\"patchRequestData\");\r",
									"responseBody = SortJson(pm.response.json());\r",
									"\r",
									"// update some added properties from response to request (for assertion and next step)\r",
									"patchRequestData.category = originalRequestData.category;\r",
									"patchRequestData.contentLink = originalRequestData.contentLink;\r",
									"patchRequestData.contentType = originalRequestData.contentType;\r",
									"patchRequestData.language = originalRequestData.language;\r",
									"patchRequestData.parentLink = originalRequestData.parentLink;\r",
									"patchRequestData.routeSegment = originalRequestData.routeSegment;\r",
									"patchRequestData.existingLanguages = originalRequestData.existingLanguages;\r",
									"patchRequestData.masterLanguage = originalRequestData.masterLanguage;\r",
									"patchRequestData.changed = responseBody.changed;\r",
									"patchRequestData.created = responseBody.created;\r",
									"patchRequestData.saved = responseBody.saved;\r",
									"\r",
									"Assert.IsEqual(\"Verify response\", SortJson(patchRequestData),  responseBody);\r",
									"\r",
									"pm.environment.unset(\"patchRequestData\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							}
						],
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create content version with new language with valid properties",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"requestBody = JSON.parse(request.data);\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"// update some added properties from response to request (for assertion and next step)\r",
									"requestBody.category = responseBody.category;\r",
									"requestBody.contentLink = responseBody.contentLink;\r",
									"requestBody.language = responseBody.language;\r",
									"requestBody.parentLink = responseBody.parentLink;\r",
									"requestBody.routeSegment = responseBody.routeSegment;\r",
									"requestBody.existingLanguages = responseBody.existingLanguages;\r",
									"requestBody.masterLanguage = responseBody.masterLanguage;\r",
									"requestBody.changed = responseBody.changed;\r",
									"requestBody.created = responseBody.created;\r",
									"requestBody.saved = responseBody.saved;\r",
									"\r",
									"requestBody = SortJson(requestBody);\r",
									"responseBody = SortJson(responseBody);\r",
									"Assert.IsEqual(\"Verify response\", requestBody,  responseBody);\r",
									"pm.environment.set(\"requestDataSv\", requestBody);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n        \"id\": {{contentId}}\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"sv\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"heading\": {\r\n        \"value\": \"epiThis is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            4,\r\n            5,\r\n            6\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify new created content language version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(200);\r",
									"\r",
									"Assert.IsEqual(\"Verify get content\", pm.environment.get(\"requestDataSv\"), SortJson(pm.response.json()));\r",
									"pm.environment.unset(\"requestDataSv\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"value": "sv",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content language version with invalid PropertyString length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"This is the customized message. The heading length should be bettween 2 and 100.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n        \"id\": {{contentId}}\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"es\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"heading\": {\r\n        \"value\": \"epiThis is the heading of new content version POST11111111111111111111111111111111111111111111111111111\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            5,\r\n            6\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create content language version with invalid PropertyString pattern",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property 'Heading' does not match the required pattern.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n        \"id\": {{contentId}}\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"es\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            5,\r\n            6\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content language version with invalid IntegerList length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' must contain between 2 and 10 items.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n        \"id\": {{contentId}}\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"es\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"heading\": {\r\n        \"value\": \"epiThis is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content language version with invalid IntegerList range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' value must be between 1 and 10.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n        \"id\": {{contentId}}\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"es\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"heading\": {\r\n        \"value\": \"epiThis is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            -1\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content language version with invalid EventDate range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' value must be between 1/1/2020 12:00:00 AM and 12/31/2022 12:00:00 AM.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n        \"id\": {{contentId}}\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"es\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"heading\": {\r\n        \"value\": \"epiThis is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2023-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Update new content version with invalid PropertyString length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"This is the customized message. The heading length should be bettween 2 and 100.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"epiThis is the heading of new content version PUT11111111111111111111111111111111111111111111111111111\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            7,\r\n            8,\r\n            9\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentGuid}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Update new content version with invalid PropertyString pattern",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property 'Heading' does not match the required pattern.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version PUT\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            7,\r\n            8,\r\n            9\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentGuid}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Update new content version with invalid IntegerList length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' must contain between 2 and 10 items.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version PUT\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            7\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentGuid}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Update new content version with invalid IntegerList range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' value must be between 1 and 10.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version PUT\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            -7,\r\n            1\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentGuid}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Update new content version with invalid EventDate range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' value must be between 1/1/2020 12:00:00 AM and 12/31/2022 12:00:00 AM.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version PUT\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            7,\r\n            1\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2023-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentGuid}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Modify content version with invalid PropertyString length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"This is the customized message. The heading length should be bettween 2 and 100.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"epiThis is the heading of new content version PATCH11111111111111111111111111111111111111111111111111111\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            4,\r\n            5,\r\n            6\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Modify content version with invalid PropertyString pattern",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property 'Heading' does not match the required pattern.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version PATCH\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            4,\r\n            5,\r\n            6\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Modify content version with invalid IntegerList length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' must contain between 2 and 10 items.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version PATCH\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            4\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Modify content version with invalid IntegerList range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' value must be between 1 and 10.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version PATCH\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            4,\r\n            -1\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Modify content version with invalid EventDate range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' value must be between 1/1/2020 12:00:00 AM and 12/31/2022 12:00:00 AM.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version PATCH\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            4,\r\n            1\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2023-02-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid PropertyString length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"This is the customized message. The heading length should be bettween 2 and 100.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"epiThis is the heading of new content version POST11111111111111111111111111111111111111111111111111111\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2,\r\n            3\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid PropertyString pattern",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property 'Heading' does not match the required pattern.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2,\r\n            3\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid IntegerList length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' must contain between 2 and 10 items.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            3\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid IntegerList range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' value must be between 1 and 10.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            -3,\r\n            1\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid EventDate range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' value must be between 1/1/2020 12:00:00 AM and 12/31/2022 12:00:00 AM.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            3,\r\n            1\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2023-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup - Delete content",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "X-Epi-Permanent-Delete",
								"type": "text",
								"value": "true"
							}
						],
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup: Delete the contentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Preparation - Create content type with validation types",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"pm.environment.set(\"contentTypeGuid\", pm.response.json().id);\r",
									"pm.environment.set(\"contentTypeName\", pm.response.json().name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"ValidationCase{{$randomInt}}{{$randomInt}}\",\r\n  \"baseType\": \"Page\",\r\n  \"properties\": [\r\n    {\r\n      \"name\": \"Heading\",\r\n      \"dataType\": \"PropertyString\",\r\n      \"branchSpecific\": true,\r\n      \"validation\": [\r\n        {\r\n          \"name\": \"Length\",\r\n          \"minimum\": 2, \r\n          \"maximum\": 100,\r\n          \"severity\": \"error\",\r\n          \"errorMessage\": \"This is the customized message. The heading length should be bettween 2 and 100.\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"IntegerList\",\r\n      \"dataType\": \"PropertyIntegerList\",\r\n      \"branchSpecific\": true,\r\n      \"validation\": [\r\n        {\r\n          \"name\": \"Length\",\r\n          \"severity\": \"error\",\r\n          \"minimum\": 2, \r\n          \"maximum\": 10\r\n        },\r\n        {\r\n          \"name\": \"ItemRange\",\r\n          \"severity\": \"error\",\r\n          \"minimum\": 1, \r\n          \"maximum\": 10\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"EventDate\",\r\n      \"dataType\": \"PropertyDate\",\r\n      \"branchSpecific\": true,\r\n      \"validation\": [\r\n        {\r\n          \"name\": \"Range\",\r\n          \"severity\": \"error\",\r\n          \"minimum\": \"2020-01-01T00:00:00\", \r\n          \"maximum\": \"2022-12-31T00:00:00\" \r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid PropertyString length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"This is the customized message. The heading length should be bettween 2 and 100.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST111111111111111111111111111111111111111111111111111111\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2,\r\n            3\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid IntegerList length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' must contain between 2 and 10 items.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            3\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid IntegerList range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' value must be between 1 and 10.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            -3,\r\n            1\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid EventDate range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' value must be between 1/1/2020 12:00:00 AM and 12/31/2022 12:00:00 AM.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            3,\r\n            1\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2023-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update content type with validation types",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(200);\r",
									"\r",
									"pm.environment.set(\"contentTypeName\", pm.response.json().name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"ValidationCase{{$randomInt}}{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"Heading\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 100,\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"This is the updated customized message. The heading length should be bettween 2 and 100.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"RegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^episerver\\\\w+\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 1,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"EventDate\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"2020-01-01T00:00:00\",\r\n\t\t\t\t\t\"maximum\": \"2023-12-31T00:00:00\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"StringList\",\r\n\t\t\t\"dataType\": \"PropertyStringList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^stringlist\\\\w+\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}?allowedUpgrades=major",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							],
							"query": [
								{
									"key": "allowedUpgrades",
									"value": "major"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid PropertyString length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"This is the updated customized message. The heading length should be bettween 2 and 100.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"episerverThis is the heading of new content version POST111111111111111111111111111111111111111111111111111111\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2,\r\n            3\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"stringList\": {\r\n        \"value\": [\r\n            \"stringlistabc\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyStringList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid PropertyString pattern",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property 'Heading' does not match the required pattern.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2,\r\n            3\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"stringList\": {\r\n        \"value\": [\r\n            \"stringlistabc\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyStringList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Valid - Create new content with invalid IntegerList length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"pm.environment.set(\"contentId\", pm.response.json().contentLink.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"episerverThis is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            3\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"stringList\": {\r\n        \"value\": [\r\n            \"stringlistabc\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyStringList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup - Delete content",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "X-Epi-Permanent-Delete",
								"type": "text",
								"value": "true"
							}
						],
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Valid - Create new content language version with invalid EventDate range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"pm.environment.set(\"contentId\", pm.response.json().contentLink.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"sv\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"heading\": {\r\n        \"value\": \"episerverThis is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            3,\r\n            1\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2023-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"stringList\": {\r\n        \"value\": [\r\n            \"stringlistabc\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyStringList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup - Delete content",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "X-Epi-Permanent-Delete",
								"type": "text",
								"value": "true"
							}
						],
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid StringList itemRegularExpression",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property 'StringList' does not match the required pattern.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"episerverThis is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            3,\r\n            1\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2023-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"stringList\": {\r\n        \"value\": [\r\n            \"stringlistabc\",\r\n            \"abc\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyStringList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup: Delete the contentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. Preparation - Create content type with serveral validation severity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"pm.environment.set(\"contentTypeGuid\", pm.response.json().id);\r",
									"pm.environment.set(\"contentTypeName\", pm.response.json().name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"ValidationCase{{$randomInt}}{{$randomInt}}\",\r\n  \"baseType\": \"Page\",\r\n  \"properties\": [\r\n    {\r\n      \"name\": \"Heading\",\r\n      \"dataType\": \"PropertyString\",\r\n      \"branchSpecific\": true,\r\n      \"validation\": [\r\n        {\r\n          \"name\": \"Length\",\r\n          \"minimum\": 2, \r\n          \"maximum\": 100,\r\n          \"severity\": \"error\",\r\n          \"errorMessage\": \"This is the customized message. The heading length should be bettween 2 and 100.\"\r\n        },\r\n        {\r\n          \"name\": \"RegularExpression\",\r\n          \"severity\": \"warning\",\r\n          \"pattern\": \"^epi[\\\\w+]\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"IntegerList\",\r\n      \"dataType\": \"PropertyIntegerList\",\r\n      \"branchSpecific\": true,\r\n      \"validation\": [\r\n        {\r\n          \"name\": \"Length\",\r\n          \"severity\": \"info\",\r\n          \"minimum\": 2, \r\n          \"maximum\": 10\r\n        },\r\n        {\r\n          \"name\": \"ItemRange\",\r\n          \"severity\": \"warning\",\r\n          \"minimum\": 1, \r\n          \"maximum\": 10\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"EventDate\",\r\n      \"dataType\": \"PropertyDate\",\r\n      \"branchSpecific\": true,\r\n      \"validation\": [\r\n        {\r\n          \"name\": \"Range\",\r\n          \"severity\": \"error\",\r\n          \"minimum\": \"2020-01-01T00:00:00\", \r\n          \"maximum\": \"2022-12-31T00:00:00\" \r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid PropertyString length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"This is the customized message. The heading length should be bettween 2 and 100.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST111111111111111111111111111111111111111111111111111111\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2,\r\n            3\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Valid - Create new content with invalid PropertyString pattern",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"pm.environment.set(\"contentId\", pm.response.json().contentLink.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2,\r\n            3\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Valid - Create new content language version with invalid IntegerList length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n        \"id\": {{contentId}}\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"sv\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"heading\": {\r\n        \"value\": \"episerverThis is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            3\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Valid - Create new content language version with invalid IntegerList range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n        \"id\": {{contentId}}\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"es\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            -3,\r\n            1\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup - Delete content",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "X-Epi-Permanent-Delete",
								"type": "text",
								"value": "true"
							}
						],
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup: Delete the contentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "7. Create content type with Length validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"requestBody = JSON.parse(request.data);\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"requestBody.id = responseBody.id;\r",
									"\r",
									"for(i = 0; i < responseBody.properties.length; i++)\r",
									"{\r",
									"    requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
									"    requestBody.properties[i].editSettings = responseBody.properties[i].editSettings;\r",
									"\r",
									"    if(requestBody.properties[i].name === \"CategoryList\" || requestBody.properties[i].name === \"ContentArea\")\r",
									"        delete requestBody.properties[i].validation;\r",
									"}\r",
									"requestBody = SortJson(requestBody);\r",
									"\r",
									"Assert.IsEqual(\"Verify response\", requestBody, SortJson(responseBody));\r",
									"\r",
									"pm.environment.set(\"contentTypeGuid\", responseBody.id);\r",
									"pm.environment.set(\"contentTypeName\", responseBody.name);\r",
									"pm.environment.set(\"requestData\", requestBody);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"LengthValidation{{$randomInt}}{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"sortOrder\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"Heading\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n            \"branchSpecific\": true,\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 100,\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"Heading must have 2-100 characters\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n            \"branchSpecific\": true,\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 5,\r\n\t\t\t\t\t\"errorMessage\": \"Integer List must have 2-5 items\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"StringList\",\r\n\t\t\t\"dataType\": \"PropertyStringList\",\r\n\t\t\t\"branchSpecific\": true,\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 3,\r\n\t\t\t\t\t\"errorMessage\": \"String list must have 2-3 items.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemLength\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 15,\r\n\t\t\t\t\t\"maximum\": 100,\r\n\t\t\t\t\t\"errorMessage\": \"String list item must be in 15-100 range\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^StringListItem\",\r\n\t\t\t\t\t\"errorMessage\": \"String list item doesn't match regular expression\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"CategoryList\",\r\n\t\t\t\"dataType\": \"PropertyCategory\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 5,\r\n\t\t\t\t\t\"errorMessage\": \"Category List must have 2-5 items\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ContentArea\",\r\n\t\t\t\"dataType\": \"PropertyContentArea\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 5,\r\n\t\t\t\t\t\"errorMessage\": \"Content List must have 2-5 items\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ContentList\",\r\n\t\t\t\"dataType\": \"PropertyContentReferenceList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 5,\r\n\t\t\t\t\t\"errorMessage\": \"Content List must have 2-5 items\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DateList\",\r\n\t\t\t\"dataType\": \"PropertyDateList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 5,\r\n\t\t\t\t\t\"errorMessage\": \"Date List must have 2-5 items\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DoubleList\",\r\n\t\t\t\"dataType\": \"PropertyDoubleList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 5,\r\n\t\t\t\t\t\"errorMessage\": \"Double List must have 2-5 items\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LinkCollection\",\r\n\t\t\t\"dataType\": \"PropertyLinkCollection\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 5,\r\n\t\t\t\t\t\"errorMessage\": \"Link Collection must have 2-5 items\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get created content type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(200);\r",
									"\r",
									"Assert.IsEqual(\"Verify response\", pm.environment.get(\"requestData\"), SortJson(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid ContentList length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Content List must have 2-5 items\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"LengthValidation{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-18T09:15:35Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"heading\": {\r\n        \"value\": \"\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n\t\t\"value\": [\r\n\t\t\t1,\r\n\t\t\t2\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyIntegerList\"\r\n\t},\r\n\t\"stringList\": {\r\n\t\t\"value\": [\r\n\t\t\t\"StringListItem1\",\r\n\t\t\t\"StringListItem2\"\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyStringList\"\r\n\t},\r\n\t\"categoryList\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 2,\r\n\t\t\t\t\"name\": \"Meet\",\r\n\t\t\t\t\"description\": \"Alloy Meet\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": 3,\r\n\t\t\t\t\"name\": \"Plan\",\r\n\t\t\t\t\"description\": \"Alloy Plan\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyCategory\"\r\n\t},\r\n\t\"contentArea\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"displayOption\": \"\",\r\n\t\t\t\t\"tag\": null,\r\n\t\t\t\t\"contentLink\": {\r\n\t\t\t\t\t\"id\": 55,\r\n\t\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\t\"guidValue\": \"3b0a8fe4-4c23-4331-bde0-877aaea8b51c\",\r\n\t\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\t\"url\": null,\r\n\t\t\t\t\t\"expanded\": null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyContentArea\"\r\n\t},\r\n\t\"contentList\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 9,\r\n\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\"guidValue\": \"0c7bb9b5-267e-4a92-8c90-8ccb47a7a676\",\r\n\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\"url\": \"/en/alloy-meet/\",\r\n\t\t\t\t\"expanded\": null\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyContentReferenceList\"\r\n\t},\r\n\t\"dateList\": {\r\n\t\t\"value\": [\r\n\t\t\t\"2021-01-18T17:00:00Z\",\r\n\t\t\t\"2021-01-10T17:00:00Z\"\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyDateList\"\r\n\t},\r\n\t\"doubleList\": {\r\n\t\t\"value\": [\r\n\t\t\t12.34,\r\n\t\t\t45.67\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyDoubleList\"\r\n\t},\r\n\t\"linkCollection\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"href\": \"/en/alloy-plan/\",\r\n\t\t\t\t\"title\": \"link1\",\r\n\t\t\t\t\"target\": null,\r\n\t\t\t\t\"text\": \"link1\",\r\n\t\t\t\t\"contentLink\": {\r\n\t\t\t\t\t\"id\": 6,\r\n\t\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\t\"guidValue\": \"28307cc0-fa78-4ce1-b865-43a9266c16b0\",\r\n\t\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\t\"url\": \"/en/alloy-plan/\",\r\n\t\t\t\t\t\"expanded\": null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyLinkCollection\"\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid LinkCollection length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Link Collection must have 2-5 items\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"LengthValidation{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-18T09:15:35Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"heading\": {\r\n        \"value\": \"\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n\t\t\"value\": [\r\n\t\t\t1,\r\n\t\t\t2\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyIntegerList\"\r\n\t},\r\n\t\"stringList\": {\r\n\t\t\"value\": [\r\n\t\t\t\"StringListItem1\",\r\n\t\t\t\"StringListItem2\"\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyStringList\"\r\n\t},\r\n\t\"categoryList\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 2,\r\n\t\t\t\t\"name\": \"Meet\",\r\n\t\t\t\t\"description\": \"Alloy Meet\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": 3,\r\n\t\t\t\t\"name\": \"Plan\",\r\n\t\t\t\t\"description\": \"Alloy Plan\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyCategory\"\r\n\t},\r\n\t\"contentArea\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"displayOption\": \"\",\r\n\t\t\t\t\"tag\": null,\r\n\t\t\t\t\"contentLink\": {\r\n\t\t\t\t\t\"id\": 55,\r\n\t\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\t\"guidValue\": \"3b0a8fe4-4c23-4331-bde0-877aaea8b51c\",\r\n\t\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\t\"url\": null,\r\n\t\t\t\t\t\"expanded\": null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyContentArea\"\r\n\t},\r\n\t\"contentList\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 9,\r\n\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\"guidValue\": \"0c7bb9b5-267e-4a92-8c90-8ccb47a7a676\",\r\n\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\"url\": \"/en/alloy-meet/\",\r\n\t\t\t\t\"expanded\": null\r\n\t\t\t},\r\n            {\r\n\t\t\t\t\"id\": 9,\r\n\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\"guidValue\": \"0c7bb9b5-267e-4a92-8c90-8ccb47a7a676\",\r\n\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\"url\": \"/en/alloy-meet/\",\r\n\t\t\t\t\"expanded\": null\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyContentReferenceList\"\r\n\t},\r\n\t\"dateList\": {\r\n\t\t\"value\": [\r\n\t\t\t\"2021-01-18T17:00:00Z\",\r\n\t\t\t\"2021-01-10T17:00:00Z\"\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyDateList\"\r\n\t},\r\n\t\"doubleList\": {\r\n\t\t\"value\": [\r\n\t\t\t12.34,\r\n\t\t\t45.67\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyDoubleList\"\r\n\t},\r\n\t\"linkCollection\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"href\": \"/en/alloy-plan/\",\r\n\t\t\t\t\"title\": \"link1\",\r\n\t\t\t\t\"target\": null,\r\n\t\t\t\t\"text\": \"link1\",\r\n\t\t\t\t\"contentLink\": {\r\n\t\t\t\t\t\"id\": 6,\r\n\t\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\t\"guidValue\": \"28307cc0-fa78-4ce1-b865-43a9266c16b0\",\r\n\t\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\t\"url\": \"/en/alloy-plan/\",\r\n\t\t\t\t\t\"expanded\": null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyLinkCollection\"\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid StringList length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"String list must have 2-3 items.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"LengthValidation{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-18T09:15:35Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"heading\": {\r\n        \"value\": \"\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n\t\t\"value\": [\r\n\t\t\t1,\r\n\t\t\t2\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyIntegerList\"\r\n\t},\r\n\t\"stringList\": {\r\n\t\t\"value\": [\r\n\t\t\t\"StringListItem\"\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyStringList\"\r\n\t},\r\n\t\"categoryList\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 2,\r\n\t\t\t\t\"name\": \"Meet\",\r\n\t\t\t\t\"description\": \"Alloy Meet\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": 3,\r\n\t\t\t\t\"name\": \"Plan\",\r\n\t\t\t\t\"description\": \"Alloy Plan\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyCategory\"\r\n\t},\r\n\t\"contentArea\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"displayOption\": \"\",\r\n\t\t\t\t\"tag\": null,\r\n\t\t\t\t\"contentLink\": {\r\n\t\t\t\t\t\"id\": 55,\r\n\t\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\t\"guidValue\": \"3b0a8fe4-4c23-4331-bde0-877aaea8b51c\",\r\n\t\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\t\"url\": null,\r\n\t\t\t\t\t\"expanded\": null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyContentArea\"\r\n\t},\r\n\t\"contentList\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 9,\r\n\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\"guidValue\": \"0c7bb9b5-267e-4a92-8c90-8ccb47a7a676\",\r\n\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\"url\": \"/en/alloy-meet/\",\r\n\t\t\t\t\"expanded\": null\r\n\t\t\t},\r\n            {\r\n\t\t\t\t\"id\": 9,\r\n\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\"guidValue\": \"0c7bb9b5-267e-4a92-8c90-8ccb47a7a676\",\r\n\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\"url\": \"/en/alloy-meet/\",\r\n\t\t\t\t\"expanded\": null\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyContentReferenceList\"\r\n\t},\r\n\t\"dateList\": {\r\n\t\t\"value\": [\r\n\t\t\t\"2021-01-18T17:00:00Z\",\r\n\t\t\t\"2021-01-10T17:00:00Z\"\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyDateList\"\r\n\t},\r\n\t\"doubleList\": {\r\n\t\t\"value\": [\r\n\t\t\t12.34,\r\n\t\t\t45.67\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyDoubleList\"\r\n\t},\r\n\t\"linkCollection\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"href\": \"/en/alloy-plan/\",\r\n\t\t\t\t\"title\": \"link1\",\r\n\t\t\t\t\"target\": null,\r\n\t\t\t\t\"text\": \"link1\",\r\n\t\t\t\t\"contentLink\": {\r\n\t\t\t\t\t\"id\": 6,\r\n\t\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\t\"guidValue\": \"28307cc0-fa78-4ce1-b865-43a9266c16b0\",\r\n\t\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\t\"url\": \"/en/alloy-plan/\",\r\n\t\t\t\t\t\"expanded\": null\r\n\t\t\t\t}\r\n\t\t\t},\r\n            {\r\n\t\t\t\t\"href\": \"/en/alloy-plan/\",\r\n\t\t\t\t\"title\": \"link1\",\r\n\t\t\t\t\"target\": null,\r\n\t\t\t\t\"text\": \"link1\",\r\n\t\t\t\t\"contentLink\": {\r\n\t\t\t\t\t\"id\": 6,\r\n\t\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\t\"guidValue\": \"28307cc0-fa78-4ce1-b865-43a9266c16b0\",\r\n\t\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\t\"url\": \"/en/alloy-plan/\",\r\n\t\t\t\t\t\"expanded\": null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyLinkCollection\"\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid StringList ItemLength",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"String list item must be in 15-100 range\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"LengthValidation{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-18T09:15:35Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"heading\": {\r\n        \"value\": \"\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n\t\t\"value\": [\r\n\t\t\t1,\r\n\t\t\t2\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyIntegerList\"\r\n\t},\r\n\t\"stringList\": {\r\n\t\t\"value\": [\r\n\t\t\t\"StringListItem\",\r\n            \"\"\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyStringList\"\r\n\t},\r\n\t\"categoryList\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 2,\r\n\t\t\t\t\"name\": \"Meet\",\r\n\t\t\t\t\"description\": \"Alloy Meet\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": 3,\r\n\t\t\t\t\"name\": \"Plan\",\r\n\t\t\t\t\"description\": \"Alloy Plan\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyCategory\"\r\n\t},\r\n\t\"contentArea\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"displayOption\": \"\",\r\n\t\t\t\t\"tag\": null,\r\n\t\t\t\t\"contentLink\": {\r\n\t\t\t\t\t\"id\": 55,\r\n\t\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\t\"guidValue\": \"3b0a8fe4-4c23-4331-bde0-877aaea8b51c\",\r\n\t\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\t\"url\": null,\r\n\t\t\t\t\t\"expanded\": null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyContentArea\"\r\n\t},\r\n\t\"contentList\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 9,\r\n\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\"guidValue\": \"0c7bb9b5-267e-4a92-8c90-8ccb47a7a676\",\r\n\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\"url\": \"/en/alloy-meet/\",\r\n\t\t\t\t\"expanded\": null\r\n\t\t\t},\r\n            {\r\n\t\t\t\t\"id\": 9,\r\n\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\"guidValue\": \"0c7bb9b5-267e-4a92-8c90-8ccb47a7a676\",\r\n\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\"url\": \"/en/alloy-meet/\",\r\n\t\t\t\t\"expanded\": null\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyContentReferenceList\"\r\n\t},\r\n\t\"dateList\": {\r\n\t\t\"value\": [\r\n\t\t\t\"2021-01-18T17:00:00Z\",\r\n\t\t\t\"2021-01-10T17:00:00Z\"\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyDateList\"\r\n\t},\r\n\t\"doubleList\": {\r\n\t\t\"value\": [\r\n\t\t\t12.34,\r\n\t\t\t45.67\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyDoubleList\"\r\n\t},\r\n\t\"linkCollection\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"href\": \"/en/alloy-plan/\",\r\n\t\t\t\t\"title\": \"link1\",\r\n\t\t\t\t\"target\": null,\r\n\t\t\t\t\"text\": \"link1\",\r\n\t\t\t\t\"contentLink\": {\r\n\t\t\t\t\t\"id\": 6,\r\n\t\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\t\"guidValue\": \"28307cc0-fa78-4ce1-b865-43a9266c16b0\",\r\n\t\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\t\"url\": \"/en/alloy-plan/\",\r\n\t\t\t\t\t\"expanded\": null\r\n\t\t\t\t}\r\n\t\t\t},\r\n            {\r\n\t\t\t\t\"href\": \"/en/alloy-plan/\",\r\n\t\t\t\t\"title\": \"link1\",\r\n\t\t\t\t\"target\": null,\r\n\t\t\t\t\"text\": \"link1\",\r\n\t\t\t\t\"contentLink\": {\r\n\t\t\t\t\t\"id\": 6,\r\n\t\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\t\"guidValue\": \"28307cc0-fa78-4ce1-b865-43a9266c16b0\",\r\n\t\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\t\"url\": \"/en/alloy-plan/\",\r\n\t\t\t\t\t\"expanded\": null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyLinkCollection\"\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid StringList ItemRegularExpression",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"String list item doesn't match regular expression\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"LengthValidation{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-18T09:15:35Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"heading\": {\r\n        \"value\": \"\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n\t\t\"value\": [\r\n\t\t\t1,\r\n\t\t\t2\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyIntegerList\"\r\n\t},\r\n\t\"stringList\": {\r\n\t\t\"value\": [\r\n\t\t\t\"StringListItem123\",\r\n            \"No pattern string\"\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyStringList\"\r\n\t},\r\n\t\"categoryList\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 2,\r\n\t\t\t\t\"name\": \"Meet\",\r\n\t\t\t\t\"description\": \"Alloy Meet\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": 3,\r\n\t\t\t\t\"name\": \"Plan\",\r\n\t\t\t\t\"description\": \"Alloy Plan\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyCategory\"\r\n\t},\r\n\t\"contentArea\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"displayOption\": \"\",\r\n\t\t\t\t\"tag\": null,\r\n\t\t\t\t\"contentLink\": {\r\n\t\t\t\t\t\"id\": 55,\r\n\t\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\t\"guidValue\": \"3b0a8fe4-4c23-4331-bde0-877aaea8b51c\",\r\n\t\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\t\"url\": null,\r\n\t\t\t\t\t\"expanded\": null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyContentArea\"\r\n\t},\r\n\t\"contentList\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 9,\r\n\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\"guidValue\": \"0c7bb9b5-267e-4a92-8c90-8ccb47a7a676\",\r\n\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\"url\": \"/en/alloy-meet/\",\r\n\t\t\t\t\"expanded\": null\r\n\t\t\t},\r\n            {\r\n\t\t\t\t\"id\": 9,\r\n\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\"guidValue\": \"0c7bb9b5-267e-4a92-8c90-8ccb47a7a676\",\r\n\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\"url\": \"/en/alloy-meet/\",\r\n\t\t\t\t\"expanded\": null\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyContentReferenceList\"\r\n\t},\r\n\t\"dateList\": {\r\n\t\t\"value\": [\r\n\t\t\t\"2021-01-18T17:00:00Z\",\r\n\t\t\t\"2021-01-10T17:00:00Z\"\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyDateList\"\r\n\t},\r\n\t\"doubleList\": {\r\n\t\t\"value\": [\r\n\t\t\t12.34,\r\n\t\t\t45.67\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyDoubleList\"\r\n\t},\r\n\t\"linkCollection\": {\r\n\t\t\"value\": [\r\n\t\t\t{\r\n\t\t\t\t\"href\": \"/en/alloy-plan/\",\r\n\t\t\t\t\"title\": \"link1\",\r\n\t\t\t\t\"target\": null,\r\n\t\t\t\t\"text\": \"link1\",\r\n\t\t\t\t\"contentLink\": {\r\n\t\t\t\t\t\"id\": 6,\r\n\t\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\t\"guidValue\": \"28307cc0-fa78-4ce1-b865-43a9266c16b0\",\r\n\t\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\t\"url\": \"/en/alloy-plan/\",\r\n\t\t\t\t\t\"expanded\": null\r\n\t\t\t\t}\r\n\t\t\t},\r\n            {\r\n\t\t\t\t\"href\": \"/en/alloy-plan/\",\r\n\t\t\t\t\"title\": \"link1\",\r\n\t\t\t\t\"target\": null,\r\n\t\t\t\t\"text\": \"link1\",\r\n\t\t\t\t\"contentLink\": {\r\n\t\t\t\t\t\"id\": 6,\r\n\t\t\t\t\t\"workId\": 0,\r\n\t\t\t\t\t\"guidValue\": \"28307cc0-fa78-4ce1-b865-43a9266c16b0\",\r\n\t\t\t\t\t\"providerName\": null,\r\n\t\t\t\t\t\"url\": \"/en/alloy-plan/\",\r\n\t\t\t\t\t\"expanded\": null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"propertyDataType\": \"PropertyLinkCollection\"\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup: Delete the contentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "13. Preparation - Create content type with validation error mesage is missing or null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"responseBody = pm.response.json();\r",
									"pm.environment.set(\"contentTypeGuid\", responseBody.id);\r",
									"pm.environment.set(\"contentTypeName\", responseBody.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"ValidationCase{{$randomInt}}{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"Heading\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 100,\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"This is the customized message. The heading length should be bettween 2 and 100.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"RegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^epi[\\\\w+]\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": null,\r\n\t\t\t\t\t\"minimum\": 1,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"EventDate\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"2020-01-01T00:00:00\",\r\n\t\t\t\t\t\"maximum\": \"2022-12-31T00:00:00\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid PropertyString pattern",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property 'Heading' does not match the required pattern.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2,\r\n            3\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid IntegerList length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            3\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid IntegerList range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Property '' value must be between 1 and 10.\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"ValidationCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n   \"startPublish\": \"2021-01-11T10:01:02Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"heading\": {\r\n        \"value\": \"This is the heading of new content version POST\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            -3,\r\n            1\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-20T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup: Delete the contentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "14. Invalid - Create content type with validation without validation name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"responseBody = pm.response.json();\r",
									"Assert.IsEqual(\"Verify target\", \"contentType.Properties[0].Validation[0].Name\", responseBody.Error.Details[0].Target);\r",
									"Assert.IsTrue(\"Verify inner error message\", responseBody.Error.Details[0].InnerError.includes(\"The Name field is required.\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"ValidationCase\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"Heading\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 100,\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"This is the customized message. The heading length should be bettween 2 and 100.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"RegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^epi[\\\\w+]\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": null,\r\n\t\t\t\t\t\"minimum\": 1,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"EventDate\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"2020-01-01T00:00:00\",\r\n\t\t\t\t\t\"maximum\": \"2022-12-31T00:00:00\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create content type with validation without validation name is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"responseBody = pm.response.json();\r",
									"Assert.IsEqual(\"Verify target\", \"contentType.Properties[0].Validation[0].Name\", responseBody.Error.Details[0].Target);\r",
									"Assert.IsTrue(\"Verify inner error message\", responseBody.Error.Details[0].InnerError.includes(\"The Name field is required.\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"ValidationCase\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"Heading\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n                    \"name\": null,\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 100,\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"This is the customized message. The heading length should be bettween 2 and 100.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"RegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^epi[\\\\w+]\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": null,\r\n\t\t\t\t\t\"minimum\": 1,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"EventDate\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"2020-01-01T00:00:00\",\r\n\t\t\t\t\t\"maximum\": \"2022-12-31T00:00:00\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create content type with validation without validation name is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"responseBody = pm.response.json();\r",
									"Assert.IsEqual(\"Verify target\", \"contentType.Properties[0].Validation[0].Name\", responseBody.Error.Details[0].Target);\r",
									"Assert.IsTrue(\"Verify inner error message\", responseBody.Error.Details[0].InnerError.includes(\"The Name field is required.\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"ValidationCase\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"Heading\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n                    \"name\": \"\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 100,\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"This is the customized message. The heading length should be bettween 2 and 100.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"RegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^epi[\\\\w+]\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": null,\r\n\t\t\t\t\t\"minimum\": 1,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"EventDate\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"2020-01-01T00:00:00\",\r\n\t\t\t\t\t\"maximum\": \"2022-12-31T00:00:00\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "15. Create content type with validation without validation severity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"requestBody = JSON.parse(request.data);\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"requestBody.id = responseBody.id;\r",
									"\r",
									"for(i = 0; i < responseBody.properties.length; i++)\r",
									"{\r",
									"    requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
									"    requestBody.properties[i].editSettings = responseBody.properties[i].editSettings;\r",
									"}\r",
									"// validation without severity will be updated to \"none\"\r",
									"requestBody.properties[0].validation[0].severity = \"none\";\r",
									"        \r",
									"Assert.IsEqual(\"Verify response\",  SortJson(requestBody),  SortJson(responseBody));\r",
									"\r",
									"pm.environment.set(\"contentTypeGuid\", responseBody.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"ValidationCase{{$randomInt}}{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"Heading\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n                    \"name\": \"Length\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 100,\r\n\t\t\t\t\t\"errorMessage\": \"This is the customized message. The heading length should be bettween 2 and 100.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"RegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^epi[\\\\w+]\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": null,\r\n\t\t\t\t\t\"minimum\": 1,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"EventDate\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"2020-01-01T00:00:00\",\r\n\t\t\t\t\t\"maximum\": \"2022-12-31T00:00:00\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create content type with validation with validation severity is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"responseBody = pm.response.json();\r",
									"Assert.IsEqual(\"Verify target\", \"contentType.validation[0].severity\", responseBody.Error.Details[0].Target);\r",
									"Assert.IsTrue(\"Verify inner error message\", responseBody.Error.Details[0].InnerError.includes(\"Cannot convert null value to EPiServer.Validation.ValidationErrorSeverity. Path 'validation[0].severity', line 13, position 36.\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"ValidationCase{{$randomInt}}{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"Heading\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n                    \"name\": \"Length\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 100,\r\n                    \"severity\": null,\r\n\t\t\t\t\t\"errorMessage\": \"This is the customized message. The heading length should be bettween 2 and 100.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"RegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^epi[\\\\w+]\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": null,\r\n\t\t\t\t\t\"minimum\": 1,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"EventDate\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"2020-01-01T00:00:00\",\r\n\t\t\t\t\t\"maximum\": \"2022-12-31T00:00:00\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create content type with validation with validation severity is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"responseBody = pm.response.json();\r",
									"Assert.IsEqual(\"Verify target\", \"contentType.validation[0].severity\", responseBody.Error.Details[0].Target);\r",
									"Assert.IsTrue(\"Verify inner error message\", responseBody.Error.Details[0].InnerError.includes(\"Error converting value \\\"\\\" to type 'EPiServer.Validation.ValidationErrorSeverity'. Path 'validation[0].severity', line 13, position 34.\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"ValidationCase{{$randomInt}}{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"Heading\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n                    \"name\": \"Length\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 100,\r\n                    \"severity\": \"\",\r\n\t\t\t\t\t\"errorMessage\": \"This is the customized message. The heading length should be bettween 2 and 100.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"RegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^epi[\\\\w+]\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": null,\r\n\t\t\t\t\t\"minimum\": 1,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"EventDate\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"2020-01-01T00:00:00\",\r\n\t\t\t\t\t\"maximum\": \"2022-12-31T00:00:00\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup: Delete the contentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "16. Invalid - Create content type with validation with invalid validation severity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"responseBody = pm.response.json();\r",
									"Assert.IsEqual(\"Verify target\", \"contentType.validation[0].severity\", responseBody.Error.Details[0].Target);\r",
									"Assert.IsTrue(\"Verify inner error message\", responseBody.Error.Details[0].InnerError.includes(\"Error converting value \\\"abc\\\" to type 'EPiServer.Validation.ValidationErrorSeverity'. Path 'validation[0].severity', line 13, position 37.\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"ValidationCase{{$randomInt}}{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"Heading\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n                    \"name\": \"Length\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 100,\r\n                    \"severity\": \"abc\",\r\n\t\t\t\t\t\"errorMessage\": \"This is the customized message. The heading length should be bettween 2 and 100.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"RegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^epi[\\\\w+]\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": null,\r\n\t\t\t\t\t\"minimum\": 1,\r\n\t\t\t\t\t\"maximum\": 10\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"EventDate\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"2020-01-01T00:00:00\",\r\n\t\t\t\t\t\"maximum\": \"2022-12-31T00:00:00\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "17. Create content type with validation type doesn't match property data type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"requestBody = JSON.parse(request.data);\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"requestBody.id = responseBody.id;\r",
									"\r",
									"for(i = 0; i < responseBody.properties.length; i++)\r",
									"{\r",
									"    requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
									"    requestBody.properties[i].editSettings = responseBody.properties[i].editSettings;\r",
									"    delete requestBody.properties[i].validation;\r",
									"}\r",
									"\r",
									"Assert.IsEqual(\"Verify response\", SortJson(requestBody), SortJson(responseBody));\r",
									"\r",
									"pm.environment.set(\"contentTypeGuid\", responseBody.id);\r",
									"pm.environment.set(\"requestData\", SortJson(requestBody));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"NotMatchValidation{{$randomInt}}{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"sortOrder\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"LengthRegExVSnotString\",\r\n\t\t\t\"dataType\": \"PropertyNumber\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"RegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^String\",\r\n\t\t\t\t\t\"errorMessage\": \"String must start with text String\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 10,\r\n\t\t\t\t\t\"maximum\": 100,\r\n\t\t\t\t\t\"errorMessage\": \"String must have 10-100 items\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"RangeVSnotNumber\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 10,\r\n\t\t\t\t\t\"maximum\": 1000,\r\n\t\t\t\t\t\"errorMessage\": \"Integer must be in range 10-1000\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LengthItemLengthVSnotStringList\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"itemLength\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 10,\r\n\t\t\t\t\t\"maximum\": 100,\r\n\t\t\t\t\t\"errorMessage\": \"String List Item must have 10-100 characters\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 5,\r\n\t\t\t\t\t\"errorMessage\": \"List must have 2-5 items\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LengthItemRangeVSnotNumberList\",\r\n\t\t\t\"dataType\": \"PropertyStringList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"10.23\",\r\n\t\t\t\t\t\"maximum\": \"100.99\",\r\n\t\t\t\t\t\"errorMessage\": \"Double List Item must be in range 10.23-100.99\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ItemRegExVSnotStringList\",\r\n\t\t\t\"dataType\": \"PropertyDoubleList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^StringList\",\r\n\t\t\t\t\t\"errorMessage\": \"String List item must start with text StringList\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get created content type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(200);\r",
									"\r",
									"Assert.IsEqual(\"Verify response\", pm.environment.get(\"requestData\"), SortJson(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup: Delete the contentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "18-19. Create content type with validation length minimum or maximum is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"requestBody = JSON.parse(request.data);\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"requestBody.id = responseBody.id;\r",
									"\r",
									"for(i = 0; i < responseBody.properties.length; i++)\r",
									"{\r",
									"    requestBody.properties[i].editSettings = responseBody.properties[i].editSettings;\r",
									"    requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
									"}\r",
									"\r",
									"requestBody = SortJson(requestBody);\r",
									"Assert.IsEqual(\"Verify response\", requestBody, SortJson(responseBody));\r",
									"\r",
									"pm.environment.set(\"contentTypeGuid\", responseBody.id);\r",
									"pm.environment.set(\"contentTypeName\", responseBody.name);\r",
									"pm.environment.set(\"requestData\", requestBody);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"LengthValidationInvalidCase{{$randomInt}}{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"sortOrder\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"String1\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"maximum\": 4,\r\n\t\t\t\t\t\"errorMessage\": \"String1: Missing minimum, maximum=4\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"String2\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 4,\r\n\t\t\t\t\t\"errorMessage\": \"String2: Missing maximum, minimum=4\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"String3\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"String3: Missing maximum, minimum\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": null,\r\n\t\t\t\t\t\"maximum\": 4,\r\n\t\t\t\t\t\"errorMessage\": \"IntegerList: Minimum=null, maximum=4\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DateList\",\r\n\t\t\t\"dataType\": \"PropertyDateList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": null,\r\n\t\t\t\t\t\"errorMessage\": \"DateList: Maximum=null, minimum=2\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get created content type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(200);\r",
									"\r",
									"Assert.IsEqual(\"Verify response\", pm.environment.get(\"requestData\"), SortJson(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with String1 length greater than maximum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"String1: Missing minimum, maximum=4\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"{{contentTypeName}}Page\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-13T08:32:51Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"string1\": {\r\n        \"value\": \"aaaaaaa\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string2\": {\r\n        \"value\": \"baaaa\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string3\": {\r\n        \"value\": \"This is string 3\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-11T17:00:00Z\",\r\n            \"2021-01-18T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with String2 length less than minimum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"String2: Missing maximum, minimum=4\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"{{contentTypeName}} Page\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-13T08:32:51Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"string1\": {\r\n        \"value\": \"aaaa\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string2\": {\r\n        \"value\": \"baa\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string3\": {\r\n        \"value\": \"This is string 3\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-11T17:00:00Z\",\r\n            \"2021-01-18T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Valid - Create new content with any value of String3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"pm.environment.set(\"contentId\", pm.response.json().contentLink.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"{{contentTypeName}} Page {{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-13T08:32:51Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"string1\": {\r\n        \"value\": \"aaaa\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string2\": {\r\n        \"value\": \"baaa\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string3\": {\r\n        \"value\": \"This is string 3\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-11T17:00:00Z\",\r\n            \"2021-01-18T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup - Delete content",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "X-Epi-Permanent-Delete",
								"type": "text",
								"value": "true"
							}
						],
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with IntegerList length greater than maximum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"IntegerList: Minimum=null, maximum=4\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"{{contentTypeName}} Page\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-13T08:32:51Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"string1\": {\r\n        \"value\": \"aaaa\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string2\": {\r\n        \"value\": \"baaaa\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string3\": {\r\n        \"value\": \"This is string 3\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2,\r\n            3,\r\n            4,\r\n            5\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-11T17:00:00Z\",\r\n            \"2021-01-18T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with DateList length less than minimum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"DateList: Maximum=null, minimum=2\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"{{contentTypeName}} Page\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-13T08:32:51Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"string1\": {\r\n        \"value\": \"aaaa\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string2\": {\r\n        \"value\": \"baaaa\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string3\": {\r\n        \"value\": \"This is string 3\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-11T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup: Delete the contentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "20-21. Create content type with validation length minimum and maximum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"requestBody = JSON.parse(request.data);\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"requestBody.id = responseBody.id;\r",
									"\r",
									"for(i = 0; i < responseBody.properties.length; i++)\r",
									"{\r",
									"    requestBody.properties[i].editSettings = responseBody.properties[i].editSettings;\r",
									"    requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
									"}\r",
									"\r",
									"requestBody = SortJson(requestBody);\r",
									"Assert.IsEqual(\"Verify response\", requestBody, SortJson(responseBody));\r",
									"\r",
									"pm.environment.set(\"contentTypeGuid\", responseBody.id);\r",
									"pm.environment.set(\"contentTypeName\", responseBody.name);\r",
									"pm.environment.set(\"requestData\", requestBody);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"LengthValidationInvalidCase{{$randomInt}}{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"sortOrder\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"String1\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 5,\r\n\t\t\t\t\t\"maximum\": 3,\r\n\t\t\t\t\t\"errorMessage\": \"String1: minimum > maximum\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"String2\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 5,\r\n\t\t\t\t\t\"maximum\": 5,\r\n\t\t\t\t\t\"errorMessage\": \"String2: minimum = maximum\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 5,\r\n\t\t\t\t\t\"maximum\": 3,\r\n\t\t\t\t\t\"errorMessage\": \"IntegerList: minimum > maximum\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DateList\",\r\n\t\t\t\"dataType\": \"PropertyDateList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 2,\r\n\t\t\t\t\t\"errorMessage\": \"DateList: minimum = maximum\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get created content type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(200);\r",
									"\r",
									"Assert.IsEqual(\"Verify response\", pm.environment.get(\"requestData\"), SortJson(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with any value of String1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"String1: minimum > maximum\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"{{contentTypeName}}Page\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-13T08:52:15Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"string1\": {\r\n        \"value\": \"This is string 1\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string2\": {\r\n        \"value\": \"aaaaa\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": null,\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-27T17:00:00Z\",\r\n            \"2021-01-19T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid value of String2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"String2: minimum = maximum\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"{{contentTypeName}}Page\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-13T08:52:15Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"string1\": {\r\n        \"value\": \"\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string2\": {\r\n        \"value\": \"This is string2\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": null,\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-27T17:00:00Z\",\r\n            \"2021-01-19T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Valid - Create new content with valid value of String2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"pm.environment.set(\"contentId\", pm.response.json().contentLink.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"{{contentTypeName}}Page{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-13T08:52:15Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"string1\": {\r\n        \"value\": \"\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string2\": {\r\n        \"value\": \"12345\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": null,\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-27T17:00:00Z\",\r\n            \"2021-01-19T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup - Delete content",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "X-Epi-Permanent-Delete",
								"type": "text",
								"value": "true"
							}
						],
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with any value of IntegerList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"IntegerList: minimum > maximum\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"{{contentTypeName}}Page\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-13T08:52:15Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"string1\": {\r\n        \"value\": \"\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string2\": {\r\n        \"value\": \"12345\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-27T17:00:00Z\",\r\n            \"2021-01-19T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid value of DateList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"DateList: minimum = maximum\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"{{contentTypeName}}Page\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-13T08:52:15Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"string1\": {\r\n        \"value\": \"\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string2\": {\r\n        \"value\": \"12345\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-19T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Valid - Create new content with valid value of DateList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"pm.environment.set(\"contentId\", pm.response.json().contentLink.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"{{contentTypeName}}Page{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-13T08:52:15Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"string1\": {\r\n        \"value\": \"\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"string2\": {\r\n        \"value\": \"12345\",\r\n        \"propertyDataType\": \"PropertyString\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": null,\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-27T17:00:00Z\",\r\n            \"2021-01-19T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup - Delete content",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "X-Epi-Permanent-Delete",
								"type": "text",
								"value": "true"
							}
						],
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup: Delete the contentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "22. Invalid - Create content type with invalid validation length minimum or maximum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"Assert.IsEqual(\"Verify message\",  \"The property '\" + pm.variables.get(\"propertyName\") + \"' on content type '\" + pm.variables.get(\"contentTypeName\") + \"' has a 'Length' validation that contains a validation setting 'Minimum' with an invalid format.\",  pm.response.json().Error.Message);\r",
									"\r",
									"pm.variables.unset(\"contentTypeName\");\r",
									"pm.variables.unset(\"propertyName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"contentTypeName\", \"LengthValidationInvalidMinMaxType\");\r",
									"pm.variables.set(\"propertyName\", \"LengthValidationInvalidMinMaxProperty\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"{{contentTypeName}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"order\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"{{propertyName}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"abc\",\r\n\t\t\t\t\t\"maximum\": 5,\r\n\t\t\t\t\t\"errorMessage\": \"String2: minimum is a text\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DateList\",\r\n\t\t\t\"dataType\": \"PropertyDateList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 56.12,\r\n\t\t\t\t\t\"errorMessage\": \"DateList: maximum is a float number\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "22.1. Invalid - Create content type with invalid validation length minimum or maximum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"Assert.IsEqual(\"Verify message\",  \"The property '\" + pm.variables.get(\"propertyName\") + \"' on content type '\" + pm.variables.get(\"contentTypeName\") + \"' has a 'Length' validation that contains a validation setting 'Minimum' with an invalid format.\",  pm.response.json().Error.Message);\r",
									"\r",
									"pm.variables.unset(\"contentTypeName\");\r",
									"pm.variables.unset(\"propertyName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"contentTypeName\", \"LengthValidationInvalidMinMaxType\");\r",
									"pm.variables.set(\"propertyName\", \"LengthValidationInvalidMinMaxProperty\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"{{contentTypeName}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"order\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"{{propertyName}}\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"abc\",\r\n\t\t\t\t\t\"maximum\": 5,\r\n\t\t\t\t\t\"errorMessage\": \"String2: minimum is a text\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DateList\",\r\n\t\t\t\"dataType\": \"PropertyDateList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 56.12,\r\n\t\t\t\t\t\"errorMessage\": \"DateList: maximum is a float number\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "23. Create content type with extra property of length validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"requestBody = JSON.parse(request.data);\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"requestBody.id = responseBody.id;\r",
									"\r",
									"for(i = 0; i < responseBody.properties.length; i++)\r",
									"{\r",
									"    requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
									"    requestBody.properties[i].editSettings = responseBody.properties[i].editSettings;\r",
									"    delete requestBody.properties[i].validation[0].extraProperty;\r",
									"    delete requestBody.properties[i].validation[0].pattern;\r",
									"}\r",
									"\r",
									"requestBody = SortJson(requestBody);\r",
									"Assert.IsEqual(\"Verify response\", requestBody, SortJson(responseBody));\r",
									"\r",
									"pm.environment.set(\"contentTypeGuid\", responseBody.id);\r",
									"pm.environment.set(\"requestData\", requestBody);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"LengthValidationInvalidCase{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"sortOrder\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"String1\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 3,\r\n\t\t\t\t\t\"maximum\": 5,\r\n\t\t\t\t\t\"extraProperty\": \"test\",\r\n\t\t\t\t\t\"errorMessage\": \"String1: Extra property 'test'\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DateList\",\r\n\t\t\t\"dataType\": \"PropertyDateList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Length\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 2,\r\n\t\t\t\t\t\"maximum\": 5,\r\n                    \"pattern\": \"^abc\",\r\n\t\t\t\t\t\"errorMessage\": \"DateList: Extra property 'pattern'\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get created content type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(200);\r",
									"\r",
									"Assert.IsEqual(\"Verify response\", pm.environment.get(\"requestData\"), SortJson(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup: Delete the contentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "24. Create content type with validation Range ItemRange minimum or maximum is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"requestBody = JSON.parse(request.data);\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"requestBody.id = responseBody.id;\r",
									"\r",
									"for(i = 0; i < responseBody.properties.length; i++)\r",
									"{\r",
									"    requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
									"    requestBody.properties[i].editSettings = responseBody.properties[i].editSettings;\r",
									"}\r",
									"        \r",
									"requestBody = SortJson(requestBody);\r",
									"Assert.IsEqual(\"Verify response\", requestBody, SortJson(responseBody));\r",
									"\r",
									"pm.environment.set(\"contentTypeGuid\", responseBody.id);\r",
									"pm.environment.set(\"contentTypeName\", responseBody.name);\r",
									"pm.environment.set(\"requestData\", requestBody);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"RangeValidationInvalidCase{{$randomInt}}{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"sortOrder\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"EventDate\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"maximum\": \"2022-12-31T00:00:00\",\r\n\t\t\t\t\t\"errorMessage\": \"EventDate: Minimum is missing\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"Integer\",\r\n\t\t\t\"dataType\": \"PropertyNumber\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 10,\r\n\t\t\t\t\t\"errorMessage\": \"Integer: Maximum is missing\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"Float1\",\r\n\t\t\t\"dataType\": \"PropertyFloatNumber\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": null,\r\n\t\t\t\t\t\"maximum\": 100.9,\r\n\t\t\t\t\t\"errorMessage\": \"Float1: Minimum is null\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"Float2\",\r\n\t\t\t\"dataType\": \"PropertyFloatNumber\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 10.55,\r\n\t\t\t\t\t\"maximum\": null,\r\n\t\t\t\t\t\"errorMessage\": \"Float2: Maximum is null\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"maximum\": 1000,\r\n\t\t\t\t\t\"errorMessage\": \"Integer List Item: Minimum is missing\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DateList\",\r\n\t\t\t\"dataType\": \"PropertyDateList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"2020-12-31T00:00:00\",\r\n\t\t\t\t\t\"errorMessage\": \"Date List Item: Maximum is missing\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DoubleList1\",\r\n\t\t\t\"dataType\": \"PropertyDoubleList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": null,\r\n\t\t\t\t\t\"maximum\": 100.99,\r\n\t\t\t\t\t\"errorMessage\": \"Double List1 Item: Minimum is null\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DoubleList2\",\r\n\t\t\t\"dataType\": \"PropertyDoubleList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 10.55,\r\n\t\t\t\t\t\"maximum\": null,\r\n\t\t\t\t\t\"errorMessage\": \"Double List2 Item: Maximum is null\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get created content type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(200);\r",
									"\r",
									"Assert.IsEqual(\"Verify response\", pm.environment.get(\"requestData\"), SortJson(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with EventDate range greater than maximum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"EventDate: Minimum is missing\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"RangeValidationInvalidCasePage{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-14T10:18:03Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2023-12-31T00:00:00\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integer\": {\r\n        \"value\": 100,\r\n        \"propertyDataType\": \"PropertyNumber\"\r\n    },\r\n    \"float1\": {\r\n        \"value\": 99.01,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"float2\": {\r\n        \"value\": 11.55,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-13T17:00:00Z\",\r\n            \"2021-01-08T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    },\r\n    \"doubleList1\": {\r\n        \"value\": [\r\n            99.99,\r\n            98.99\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    },\r\n    \"doubleList2\": {\r\n        \"value\": [\r\n            10.56,\r\n            10.66\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with Integer range less than minimum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Integer: Maximum is missing\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"RangeValidationInvalidCasePage{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-14T10:18:03Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-12-31T00:00:00\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integer\": {\r\n        \"value\": 1,\r\n        \"propertyDataType\": \"PropertyNumber\"\r\n    },\r\n    \"float1\": {\r\n        \"value\": 99.01,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"float2\": {\r\n        \"value\": 11.55,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-13T17:00:00Z\",\r\n            \"2021-01-08T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    },\r\n    \"doubleList1\": {\r\n        \"value\": [\r\n            99.99,\r\n            98.99\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    },\r\n    \"doubleList2\": {\r\n        \"value\": [\r\n            10.56,\r\n            10.66\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with Float1 range greater than maximum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Float1: Minimum is null\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"RangeValidationInvalidCasePage{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-14T10:18:03Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2020-12-31T00:00:00\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integer\": {\r\n        \"value\": 100,\r\n        \"propertyDataType\": \"PropertyNumber\"\r\n    },\r\n    \"float1\": {\r\n        \"value\": 100.99,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"float2\": {\r\n        \"value\": 11.55,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-13T17:00:00Z\",\r\n            \"2021-01-08T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    },\r\n    \"doubleList1\": {\r\n        \"value\": [\r\n            99.99,\r\n            98.99\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    },\r\n    \"doubleList2\": {\r\n        \"value\": [\r\n            10.56,\r\n            10.66\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with Float2 range less than minimum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Float2: Maximum is null\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"RangeValidationInvalidCasePage{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-14T10:18:03Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2020-12-31T00:00:00\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integer\": {\r\n        \"value\": 100,\r\n        \"propertyDataType\": \"PropertyNumber\"\r\n    },\r\n    \"float1\": {\r\n        \"value\": 100.9,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"float2\": {\r\n        \"value\": 10.54,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-13T17:00:00Z\",\r\n            \"2021-01-08T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    },\r\n    \"doubleList1\": {\r\n        \"value\": [\r\n            99.99,\r\n            98.99\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    },\r\n    \"doubleList2\": {\r\n        \"value\": [\r\n            10.56,\r\n            10.66\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with IntegerList itemRange greater than maximum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Integer List Item: Minimum is missing\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"RangeValidationInvalidCasePage{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-14T10:18:03Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2020-12-31T00:00:00\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integer\": {\r\n        \"value\": 100,\r\n        \"propertyDataType\": \"PropertyNumber\"\r\n    },\r\n    \"float1\": {\r\n        \"value\": 90.99,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"float2\": {\r\n        \"value\": 11.55,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1000,\r\n            2000\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-13T17:00:00Z\",\r\n            \"2021-01-08T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    },\r\n    \"doubleList1\": {\r\n        \"value\": [\r\n            99.99,\r\n            98.99\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    },\r\n    \"doubleList2\": {\r\n        \"value\": [\r\n            10.56,\r\n            10.66\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with DateList itemRange less than minimum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Date List Item: Maximum is missing\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"RangeValidationInvalidCasePage{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-14T10:18:03Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2020-12-31T00:00:00\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integer\": {\r\n        \"value\": 100,\r\n        \"propertyDataType\": \"PropertyNumber\"\r\n    },\r\n    \"float1\": {\r\n        \"value\": 90.99,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"float2\": {\r\n        \"value\": 11.55,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1000,\r\n            200\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-13T17:00:00Z\",\r\n            \"2019-01-08T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    },\r\n    \"doubleList1\": {\r\n        \"value\": [\r\n            99.99,\r\n            98.99\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    },\r\n    \"doubleList2\": {\r\n        \"value\": [\r\n            10.56,\r\n            10.66\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with DoubleList1 itemRange greater than maximum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Double List1 Item: Minimum is null\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"RangeValidationInvalidCasePage{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-14T10:18:03Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2020-12-31T00:00:00\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integer\": {\r\n        \"value\": 100,\r\n        \"propertyDataType\": \"PropertyNumber\"\r\n    },\r\n    \"float1\": {\r\n        \"value\": 99.99,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"float2\": {\r\n        \"value\": 11.55,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-13T17:00:00Z\",\r\n            \"2021-01-08T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    },\r\n    \"doubleList1\": {\r\n        \"value\": [\r\n            199.99,\r\n            98.99\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    },\r\n    \"doubleList2\": {\r\n        \"value\": [\r\n            10.56,\r\n            10.66\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with DoubleList2 itemRange less than minimum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Double List2 Item: Maximum is null\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"RangeValidationInvalidCasePage{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-14T10:18:03Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2020-12-31T00:00:00\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integer\": {\r\n        \"value\": 100,\r\n        \"propertyDataType\": \"PropertyNumber\"\r\n    },\r\n    \"float1\": {\r\n        \"value\": 99.99,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"float2\": {\r\n        \"value\": 11.55,\r\n        \"propertyDataType\": \"PropertyFloatNumber\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            1,\r\n            2\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"dateList\": {\r\n        \"value\": [\r\n            \"2021-01-13T17:00:00Z\",\r\n            \"2021-01-08T17:00:00Z\"\r\n        ],\r\n        \"propertyDataType\": \"PropertyDateList\"\r\n    },\r\n    \"doubleList1\": {\r\n        \"value\": [\r\n            99.99,\r\n            98.99\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    },\r\n    \"doubleList2\": {\r\n        \"value\": [\r\n            10.54,\r\n            10.66\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup: Delete the contentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "25. Create content type with validation Range ItemRange minimum and maximum is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"requestBody = JSON.parse(request.data);\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"requestBody.id = responseBody.id;\r",
									"\r",
									"for(i = 0; i < responseBody.properties.length; i++)\r",
									"{\r",
									"    requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
									"    requestBody.properties[i].editSettings = responseBody.properties[i].editSettings;\r",
									"}\r",
									"        \r",
									"requestBody = SortJson(requestBody);\r",
									"Assert.IsEqual(\"Verify response\", requestBody, SortJson(responseBody));\r",
									"\r",
									"pm.environment.set(\"contentTypeGuid\", responseBody.id);\r",
									"pm.environment.set(\"contentTypeName\", responseBody.name);\r",
									"pm.environment.set(\"requestData\", requestBody);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"RangeValidationInvalidCase{{$randomInt}}{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"sortOrder\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"EventDate\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"EventDate: Minimum & Maximum are missing\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"Integer\",\r\n\t\t\t\"dataType\": \"PropertyNumber\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": null,\r\n\t\t\t\t\t\"maximum\": null,\r\n\t\t\t\t\t\"errorMessage\": \"Integer: Minimum & Maximum are null\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"Integer List Item: Minimum & Maximum are missing\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DoubleList1\",\r\n\t\t\t\"dataType\": \"PropertyDoubleList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": null,\r\n\t\t\t\t\t\"maximum\": null,\r\n\t\t\t\t\t\"errorMessage\": \"Double List1 Item: Minimum & Maximum are null\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get created content type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(200);\r",
									"\r",
									"Assert.IsEqual(\"Verify response\", pm.environment.get(\"requestData\"), SortJson(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Valid - Create new content with any value of properties",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"pm.environment.set(\"contentId\", pm.response.json().contentLink.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"RangeValidationInvalidCasePage{{$randomInt}}{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-14T10:58:58Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"CheckedOut\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"eventDate\": {\r\n        \"value\": \"2021-01-19T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integer\": {\r\n        \"value\": 1231,\r\n        \"propertyDataType\": \"PropertyNumber\"\r\n    },\r\n    \"integerList\": {\r\n        \"value\": [\r\n            4121,\r\n            -123\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"doubleList1\": {\r\n        \"value\": [\r\n            12.45,\r\n            -92.11\r\n        ],\r\n        \"propertyDataType\": \"PropertyDoubleList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup - Delete content",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "X-Epi-Permanent-Delete",
								"type": "text",
								"value": "true"
							}
						],
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup: Delete the contentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "26-27. Create content type with validation Range ItemRange minimum and maximum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"requestBody = JSON.parse(request.data);\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"requestBody.id = responseBody.id;\r",
									"\r",
									"for(i = 0; i < responseBody.properties.length; i++)\r",
									"{\r",
									"    requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
									"    requestBody.properties[i].editSettings = responseBody.properties[i].editSettings;\r",
									"}\r",
									"        \r",
									"requestBody = SortJson(requestBody);\r",
									"Assert.IsEqual(\"Verify response\", requestBody, SortJson(responseBody));\r",
									"\r",
									"pm.environment.set(\"contentTypeGuid\", responseBody.id);\r",
									"pm.environment.set(\"contentTypeName\", responseBody.name);\r",
									"pm.environment.set(\"requestData\", requestBody);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"RangeValidationInvalidCase{{$randomInt}}{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"sortOrder\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"EventDate1\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"2022-12-31T00:00:00\",\r\n\t\t\t\t\t\"maximum\": \"2020-12-31T00:00:00\",\r\n\t\t\t\t\t\"errorMessage\": \"EventDate: Minimum > Maximum\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList1\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 200,\r\n\t\t\t\t\t\"maximum\": 100,\r\n\t\t\t\t\t\"errorMessage\": \"Integer List Item: Minimum > Maximum\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"EventDate2\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"2020-12-31T00:00:00\",\r\n\t\t\t\t\t\"maximum\": \"2020-12-31T00:00:00\",\r\n\t\t\t\t\t\"errorMessage\": \"EventDate: Minimum = Maximum\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList2\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 100,\r\n\t\t\t\t\t\"maximum\": 100,\r\n\t\t\t\t\t\"errorMessage\": \"Integer List Item: Minimum = Maximum\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get created content type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(200);\r",
									"\r",
									"Assert.IsEqual(\"Verify response\", pm.environment.get(\"requestData\"), SortJson(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with any value of EventDate1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"EventDate: Minimum > Maximum\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"RangeValidationInvalidCasePage{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-15T04:30:26Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"Published\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"eventDate1\": {\r\n        \"value\": \"2020-12-30T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integerList1\": {\r\n        \"value\": null,\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate2\": {\r\n        \"value\": \"2020-12-30T17:00:00Z\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integerList2\": {\r\n        \"value\": [\r\n            100,\r\n            100\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with any value of IntegerList1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\", \"Integer List Item: Minimum > Maximum\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"RangeValidationInvalidCasePage{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-15T04:30:26Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"Published\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"eventDate1\": {\r\n        \"value\": null,\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integerList1\": {\r\n        \"value\": [\r\n            1,\r\n            2\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate2\": {\r\n        \"value\": \"2020-12-31T00:00:00\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integerList2\": {\r\n        \"value\": [\r\n            100,\r\n            100\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid value of EventDate2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\",  \"EventDate: Minimum = Maximum\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"RangeValidationInvalidCasePage{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-15T04:30:26Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"Published\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"eventDate1\": {\r\n        \"value\": null,\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integerList1\": {\r\n        \"value\": null,\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate2\": {\r\n        \"value\": \"2020-12-30T00:00:00\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integerList2\": {\r\n        \"value\": [\r\n            100,\r\n            100\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new content with valid value of EventDate2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"pm.environment.set(\"contentId\", pm.response.json().contentLink.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"RangeValidationInvalidCasePage{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-15T04:30:26Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"Published\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"eventDate1\": {\r\n        \"value\": null,\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integerList1\": {\r\n        \"value\": null,\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate2\": {\r\n        \"value\": \"2020-12-31T00:00:00\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integerList2\": {\r\n        \"value\": [\r\n            100,\r\n            100\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup - Delete content",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "X-Epi-Permanent-Delete",
								"type": "text",
								"value": "true"
							}
						],
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid - Create new content with invalid value of IntegerList2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"\r",
									"Assert.IsEqual(\"Verify message\",  \"Integer List Item: Minimum = Maximum\",  pm.response.json().Error.Message);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"RangeValidationInvalidCasePage{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-15T04:30:26Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"Published\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"eventDate1\": {\r\n        \"value\": null,\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integerList1\": {\r\n        \"value\": null,\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate2\": {\r\n        \"value\": \"2020-12-31T00:00:00\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integerList2\": {\r\n        \"value\": [\r\n            20,\r\n            100\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new content with valid value of IntegerList2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"pm.environment.set(\"contentId\", pm.response.json().contentLink.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contentLink\": {\r\n    },\r\n    \"name\": \"RangeValidationInvalidCasePage{{$randomInt}}\",\r\n    \"language\": {\r\n        \"name\": \"en\"\r\n    },\r\n    \"contentType\": [\r\n        \"Page\",\r\n        \"{{contentTypeName}}\"\r\n    ],\r\n    \"parentLink\": {\r\n        \"guidValue\": \"{{parentGuid}}\"\r\n    },\r\n    \"startPublish\": \"2021-01-15T04:30:26Z\",\r\n    \"stopPublish\": null,\r\n    \"status\": \"Published\",\r\n    \"category\": {\r\n        \"value\": [],\r\n        \"propertyDataType\": \"PropertyCategory\"\r\n    },\r\n    \"eventDate1\": {\r\n        \"value\": null,\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integerList1\": {\r\n        \"value\": null,\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    },\r\n    \"eventDate2\": {\r\n        \"value\": \"2020-12-31T00:00:00\",\r\n        \"propertyDataType\": \"PropertyDate\"\r\n    },\r\n    \"integerList2\": {\r\n        \"value\": [\r\n            100,\r\n            100\r\n        ],\r\n        \"propertyDataType\": \"PropertyIntegerList\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup - Delete content",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "X-Epi-Permanent-Delete",
								"type": "text",
								"value": "true"
							}
						],
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{contentId}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{contentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup: Delete the contentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "28. Invalid - Create content type with invalid Range ItemRange length minimum or maximum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"Assert.IsEqual(\"Verify message\",  \"The property '\" + pm.variables.get(\"propertyName\") + \"' on content type '\" + pm.variables.get(\"contentTypeName\") + \"' has a 'Range' validation that contains a validation setting 'Minimum' with an invalid format.\",  pm.response.json().Error.Message);\r",
									"\r",
									"pm.variables.unset(\"contentTypeName\");\r",
									"pm.variables.unset(\"propertyName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"contentTypeName\", \"RangeValidationInvalidMinMaxType\");\r",
									"pm.variables.set(\"propertyName\", \"RangeValidationInvalidMinMaxProperty\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"{{contentTypeName}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"sortOrder\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"{{propertyName}}\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"String\",\r\n\t\t\t\t\t\"maximum\": \"2020-12-31\",\r\n\t\t\t\t\t\"errorMessage\": \"EventDate1: Minimum is a text\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"EventDate2\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"2020-12-31\",\r\n\t\t\t\t\t\"maximum\": 2020,\r\n\t\t\t\t\t\"errorMessage\": \"EventDate2: Maximum is a number\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList1\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"a Text\",\r\n\t\t\t\t\t\"maximum\": 100,\r\n\t\t\t\t\t\"errorMessage\": \"Integer List1 Item: Minimum is a text\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList2\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 100,\r\n\t\t\t\t\t\"maximum\": \"2020-12-31\",\r\n\t\t\t\t\t\"errorMessage\": \"Integer List2 Item: Maximum is a date\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "28.1. Invalid - Create content type with invalid Range ItemRange length minimum or maximum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"Assert.IsEqual(\"Verify message\",  \"The property '\" + pm.variables.get(\"propertyName\") + \"' on content type '\" + pm.variables.get(\"contentTypeName\") + \"' has a 'Range' validation that contains a validation setting 'Maximum' with an invalid format.\",  pm.response.json().Error.Message);\r",
									"\r",
									"pm.variables.unset(\"contentTypeName\");\r",
									"pm.variables.unset(\"propertyName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"contentTypeName\", \"RangeValidationInvalidMinMaxType\");\r",
									"pm.variables.set(\"propertyName\", \"RangeValidationInvalidMinMaxProperty\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"{{contentTypeName}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"order\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"{{propertyName}}\",\r\n\t\t\t\"dataType\": \"PropertyDate\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"Range\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"2020-12-31\",\r\n\t\t\t\t\t\"maximum\": 2020,\r\n\t\t\t\t\t\"errorMessage\": \"EventDate2: Maximum is a number\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList1\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"a Text\",\r\n\t\t\t\t\t\"maximum\": 100,\r\n\t\t\t\t\t\"errorMessage\": \"Integer List1 Item: Minimum is a text\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList2\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 100,\r\n\t\t\t\t\t\"maximum\": \"2020-12-31\",\r\n\t\t\t\t\t\"errorMessage\": \"Integer List2 Item: Maximum is a date\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "28.2. Invalid - Create content type with invalid Range ItemRange length minimum or maximum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"Assert.IsEqual(\"Verify message\",  \"The property '\" + pm.variables.get(\"propertyName\") + \"' on content type '\" + pm.variables.get(\"contentTypeName\") + \"' has a 'ItemRange' validation that contains a validation setting 'Minimum' with an invalid format.\",  pm.response.json().Error.Message);\r",
									"\r",
									"pm.variables.unset(\"contentTypeName\");\r",
									"pm.variables.unset(\"propertyName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"contentTypeName\", \"RangeValidationInvalidMinMaxType\");\r",
									"pm.variables.set(\"propertyName\", \"RangeValidationInvalidMinMaxProperty\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"{{contentTypeName}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"order\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"{{propertyName}}\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": \"a Text\",\r\n\t\t\t\t\t\"maximum\": 100,\r\n\t\t\t\t\t\"errorMessage\": \"Integer List1 Item: Minimum is a text\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"IntegerList2\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 100,\r\n\t\t\t\t\t\"maximum\": \"2020-12-31\",\r\n\t\t\t\t\t\"errorMessage\": \"Integer List2 Item: Maximum is a date\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "28.2. Invalid - Create content type with invalid Range ItemRange length minimum or maximum Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(400);\r",
									"Assert.IsEqual(\"Verify message\",  \"The property '\" + pm.variables.get(\"propertyName\") + \"' on content type '\" + pm.variables.get(\"contentTypeName\") + \"' has a 'ItemRange' validation that contains a validation setting 'Maximum' with an invalid format.\",  pm.response.json().Error.Message);\r",
									"\r",
									"pm.variables.unset(\"contentTypeName\");\r",
									"pm.variables.unset(\"propertyName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"contentTypeName\", \"RangeValidationInvalidMinMaxType\");\r",
									"pm.variables.set(\"propertyName\", \"RangeValidationInvalidMinMaxProperty\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"{{contentTypeName}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"order\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"{{propertyName}}\",\r\n\t\t\t\"dataType\": \"PropertyIntegerList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRange\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"minimum\": 100,\r\n\t\t\t\t\t\"maximum\": \"2020-12-31\",\r\n\t\t\t\t\t\"errorMessage\": \"Integer List2 Item: Maximum is a date\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "30. Invalid - Create content type with validation RegularExpression ItemRegularExpression pattern is null or missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"RegExValidationInvalidCase{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"sortOrder\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"String1\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"RegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"String 1: pattern is missing\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"String2\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"RegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": null,\r\n\t\t\t\t\t\"errorMessage\": \"String 2: pattern is null\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"StringList1\",\r\n\t\t\t\"dataType\": \"PropertyStringList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"errorMessage\": \"String List 1: pattern is missing\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"StringList2\",\r\n\t\t\t\"dataType\": \"PropertyStringList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": null,\r\n\t\t\t\t\t\"errorMessage\": \"String List 2: pattern is null\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "31. Invalid - Create content type with invalid RegularExpression ItemRegularExpression pattern",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"RegExValidationInvalidCase{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"order\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"String1\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"RegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"[0-9]++\",\r\n\t\t\t\t\t\"errorMessage\": \"String 1: pattern is invalid\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"StringList1\",\r\n\t\t\t\"dataType\": \"PropertyStringList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"[0-9]++\",\r\n\t\t\t\t\t\"errorMessage\": \"String List 1: pattern is invalid\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "32. Create content type with extra property of itemRegularExpression validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(201);\r",
									"\r",
									"requestBody = JSON.parse(request.data);\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"requestBody.id = responseBody.id;\r",
									"\r",
									"for(i = 0; i < responseBody.properties.length; i++)\r",
									"{\r",
									"    requestBody.properties[i].branchSpecific = responseBody.properties[i].branchSpecific;\r",
									"    requestBody.properties[i].editSettings = responseBody.properties[i].editSettings;\r",
									"    delete requestBody.properties[i].validation[0].test;\r",
									"    delete requestBody.properties[i].validation[0].extraProperty;\r",
									"    delete requestBody.properties[i].validation[0].minimum;\r",
									"}\r",
									"\r",
									"requestBody = SortJson(requestBody);\r",
									"Assert.IsEqual(\"Verify response\", requestBody, SortJson(responseBody));\r",
									"\r",
									"pm.environment.set(\"contentTypeGuid\", responseBody.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"RegExValidationInvalidCase{{$randomInt}}\",\r\n\t\"baseType\": \"Page\",\r\n\t\"editSettings\": {\r\n\t\t\"available\": true,\r\n\t\t\"sortOrder\": 0\r\n\t},\r\n\t\"properties\": [\r\n\t\t{\r\n\t\t\t\"name\": \"String1\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"RegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^String1\",\r\n\t\t\t\t\t\"test\": \"test\",\r\n\t\t\t\t\t\"errorMessage\": \"String1: extra property 'test'\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"String2\",\r\n\t\t\t\"dataType\": \"PropertyString\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"RegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^String2\",\r\n\t\t\t\t\t\"minimum\": 10,\r\n\t\t\t\t\t\"errorMessage\": \"String 2:  extra property 'minimum'\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"StringList1\",\r\n\t\t\t\"dataType\": \"PropertyStringList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^String1\",\r\n\t\t\t\t\t\"extraProperty\": \"test\",\r\n\t\t\t\t\t\"errorMessage\": \"String List1: extra property 'test'\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"StringList2\",\r\n\t\t\t\"dataType\": \"PropertyStringList\",\r\n\t\t\t\"validation\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"ItemRegularExpression\",\r\n\t\t\t\t\t\"severity\": \"error\",\r\n\t\t\t\t\t\"pattern\": \"^String2\",\r\n\t\t\t\t\t\"minimum\": 10,\r\n\t\t\t\t\t\"errorMessage\": \"String 2:  extra property 'minimum'\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup: Delete the contentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cmsUrl}}/{{HAPI:Definition_ContentTypeEndpoint}}/{{contentTypeGuid}}",
							"host": [
								"{{cmsUrl}}"
							],
							"path": [
								"{{HAPI:Definition_ContentTypeEndpoint}}",
								"{{contentTypeGuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cleanup - Delete contents",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"verifyResponseCode(204);\r",
									"\r",
									"//Unset variables\r",
									"pm.environment.unset(\"parentGuid\");\r",
									"pm.environment.unset(\"contentTypeGuid\");\r",
									"pm.environment.unset(\"contentTypeName\");\r",
									"pm.environment.unset(\"requestData\");\r",
									"pm.environment.unset(\"contentGuid\");\r",
									"pm.environment.unset(\"contentId\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ".AspNet.ApplicationCookie={{appCookie}}"
							},
							{
								"key": "X-Epi-Permanent-Delete",
								"type": "text",
								"value": "true"
							}
						],
						"url": {
							"raw": "{{cmsUrl}}{{HAPI:CMAEndpoint}}/{{parentGuid}}",
							"host": [
								"{{cmsUrl}}{{HAPI:CMAEndpoint}}"
							],
							"path": [
								"{{parentGuid}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log(\"===== \" + request.name + \" =====\");    //Write test name",
					"",
					"/////////////////////////////////////////////////////",
					"// This method is to generate a random string with specific length",
					"/////////////////////////////////////////////////////",
					"getRandomString = (length) => {",
					"    var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
					"    var result = 'a';",
					"    for ( var i = 0; i < length - 1; i++ ) {",
					"        result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));",
					"    }",
					"    return result;",
					"}",
					"",
					"/////////////////////////////////////////////////////",
					"// This method is to generate a random string includes special characters with specific length",
					"/////////////////////////////////////////////////////",
					"getRandomStringIncludeSpecialCharacter = (length) => {",
					"    var randomChars = ' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()-_+=[]{}\\|:;\\',./<>?';",
					"    var result = 'a';",
					"    for ( var i = 0; i < length - 1; i++ ) {",
					"        result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));",
					"    }",
					"    return result;",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var lodash = require(\"lodash\");  ",
					"",
					"// Global functions for common tests in general",
					"verifyResponseCode = (expectedCode) => {",
					"    pm.test(\"Status code \" + expectedCode, function () {",
					"        pm.response.to.have.status(expectedCode);",
					"    });",
					"};",
					"",
					"Assert = {",
					"    IsEqual:function(elementName, expectedValue, actualValue)   //Assert if expectedValue == actualValue, for all types",
					"    {",
					"        if (typeof(expectedValue) == typeof(actualValue))",
					"        {",
					"            //TO DOUBLE-CHECK: In case comparing arrays, if array element contains sub-arrays, then such arrays / sub-arrays need to be sorted before comparing. Otherwise it might return false if arrays / sub-arrays order are different",
					"            if (typeof(actualValue) == \"object\")",
					"            {",
					"                pm.test(elementName + \" should be correct. Expected: \" + expectedValue + \". Actual: \" + actualValue, function(){",
					"                    pm.expect(lodash.isEqual(expectedValue, actualValue)).to.equal(true);",
					"                });",
					"                ",
					"                if (!lodash.isEqual(expectedValue, actualValue))",
					"                {",
					"                    console.log(\"----- expectedValue -----\");",
					"                    console.log(JSON.stringify(expectedValue));",
					"                    //console.log(expectedValue);",
					"                    console.log(\"----- actualValue -----\");",
					"                    console.log(JSON.stringify(actualValue));",
					"                    //console.log(actualValue);",
					"                }",
					"            }",
					"            else",
					"            {",
					"                pm.test(elementName + \" should be correct. Expected: \" + expectedValue + \". Actual: \" + actualValue, function(){",
					"                    pm.expect(expectedValue).to.equal(actualValue);",
					"                });",
					"",
					"                if (!lodash.isEqual(expectedValue, actualValue))",
					"                {",
					"                    console.log(\"----- expectedValue -----\");",
					"                    console.log(expectedValue);",
					"                    console.log(\"----- actualValue -----\");",
					"                    console.log(actualValue);",
					"                }",
					"            }",
					"        }",
					"    },",
					"    ",
					"    IsGreater:function(elementName, expectedValue, actualValue) //Assert if numeric actualValue > numeric expectedValue",
					"    {",
					"        pm.test(elementName + \" should be larger than \" + expectedValue + \". Actual: \" + actualValue, function(){",
					"            pm.expect(actualValue).to.be.above(expectedValue);",
					"        });",
					"    },",
					"    ",
					"    IsGreaterOrEqual:function(elementName, expectedValue, actualValue) //Assert if numeric actualValue >= numeric expectedValue",
					"    {",
					"        pm.test(elementName + \" should be larger than or equal to \" + expectedValue + \". Actual: \" + actualValue, function(){",
					"            pm.expect(actualValue).to.not.be.below(expectedValue);",
					"        });",
					"    },",
					"    ",
					"    IsLess:function(elementName, expectedValue, actualValue) //Assert if numeric actualValue < numeric expectedValue",
					"    {",
					"        pm.test(elementName + \" should be less than \" + expectedValue + \". Actual: \" + actualValue, function(){",
					"            pm.expect(actualValue).to.be.below(expectedValue);",
					"        });",
					"    },",
					"    ",
					"    IsLessOrEqual:function(elementName, expectedValue, actualValue) //Assert if numeric actualValue <= numeric expectedValue",
					"    {",
					"        pm.test(elementName + \" should be less than or equal to \" + expectedValue + \". Actual: \" + actualValue, function(){",
					"            pm.expect(actualValue).to.not.be.above(expectedValue);",
					"        });",
					"    },",
					"    ",
					"    IsNull:function(elementName, actualValue)   //Assert if actualValue is null",
					"    {",
					"        pm.test(elementName + \" should be null. Actual: \" + actualValue, function(){",
					"            pm.expect(actualValue).to.equal(null);",
					"        });",
					"    },",
					"    ",
					"    IsEmpty:function(elementName, actualValue)  //Assert if actualValue is empty, that means array with no element",
					"    {",
					"        pm.test(elementName + \" should be empty. Actual: \" + actualValue.length, function()",
					"        {",
					"            pm.expect(actualValue.length).to.equal(0);",
					"        });",
					"    },",
					"    ",
					"    IsNotEmpty:function(elementName, actualValue)  //Assert if actualValue is not empty, that means array with some elements",
					"    {",
					"        pm.test(elementName + \" should not be empty. Actual: \" + actualValue.length, function()",
					"        {",
					"            pm.expect(actualValue.length).to.be.above(0);",
					"        });",
					"    },",
					"    ",
					"    IsTrue:function(elementName, actualValue)   //Assert if actualValue equals true",
					"    {",
					"        pm.test(elementName + \" should be true. Actual: \" + actualValue, function()",
					"        {",
					"            pm.expect(actualValue).to.be.true;",
					"        });",
					"    },",
					"    ",
					"    IsFalse:function(elementName, actualValue)   //Assert if actualValue equals false",
					"    {",
					"        pm.test(elementName + \" should be false. Actual: \" + actualValue, function()",
					"        {",
					"            pm.expect(actualValue).to.be.false;",
					"        });",
					"    }",
					"};",
					"",
					"String.prototype.toCamelCase = function() {",
					"    return this.replace(/^([A-Z])|[\\s-_]+(\\w)/g, function(match, p1, p2, offset) {",
					"        if (p2) return p2.toUpperCase();",
					"        return p1.toLowerCase();        ",
					"    });",
					"};",
					"",
					"SortJson = (obj) => {",
					"    return Object.keys(obj).sort().reduce((acc,key)=>{",
					"        if (Array.isArray(obj[key])){",
					"            acc[key.toCamelCase()]=obj[key].map(SortJson);",
					"        }",
					"        if (obj[key] !== null)",
					"        {",
					"            if (typeof obj[key] === 'object'){",
					"                acc[key.toCamelCase()]=SortJson(obj[key]);",
					"            }",
					"            else{",
					"                acc[key.toCamelCase()]=obj[key];",
					"            }",
					"        }",
					"        return acc;",
					"    },{});",
					"}",
					"",
					"// This is to sort property by sortOrder",
					"SortContentTypeByPropertiesOrder = (obj) => {",
					"    var propertyArray = obj.properties;",
					"    for(i = 0; i <= propertyArray.length - 2; i++)",
					"        for(j = propertyArray.length -2; j >= i; j--)",
					"            if((propertyArray[j].editSettings.sortOrder > propertyArray[j + 1].editSettings.sortOrder) || (propertyArray[j].editSettings.sortOrder == propertyArray[j + 1].editSettings.sortOrder && propertyArray[j].name > propertyArray[j + 1].name))",
					"            {",
					"                temp = propertyArray[j];",
					"                propertyArray[j] = propertyArray[j + 1];",
					"                propertyArray[j + 1] = temp; ",
					"            }",
					"    obj.properties = propertyArray;",
					"    return obj;",
					"}"
				]
			}
		}
	]
}